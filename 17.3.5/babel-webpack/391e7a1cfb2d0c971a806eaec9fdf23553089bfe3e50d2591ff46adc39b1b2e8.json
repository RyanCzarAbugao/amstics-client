{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ryana/OneDrive/Desktop/Personal Files/Freelance/attendance-monitoring-using-qr-code/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { AsyncSubject, BehaviorSubject } from 'rxjs';\nconst _c0 = [\"video\"];\nconst _c1 = [\"canvas\"];\nconst _c2 = [\"resultsPanel\"];\nconst WASMPROJECT = \"assets/wasm/index.js\";\nconst WASMREMOTE = \"https://cdn.jsdelivr.net/npm/ngx-scanner-qrcode@1.6.9/wasm/index.js\";\nconst WASMREMOTELATEST = \"https://cdn.jsdelivr.net/npm/ngx-scanner-qrcode@latest/wasm/index.js\";\nconst BEEP = `data:audio/mpeg;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjI5LjEwMAAAAAAAAAAAAAAA/+M4wAAAAAAAAAAAAEluZm8AAAAPAAAABQAAAkAAgICAgICAgICAgICAgICAgICAgKCgoKCgoKCgoKCgoKCgoKCgoKCgwMDAwMDAwMDAwMDAwMDAwMDAwMDg4ODg4ODg4ODg4ODg4ODg4ODg4P//////////////////////////AAAAAExhdmM1OC41NAAAAAAAAAAAAAAAACQEUQAAAAAAAAJAk0uXRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/+MYxAANQAbGeUEQAAHZYZ3fASqD4P5TKBgocg+Bw/8+CAYBA4XB9/4EBAEP4nB9+UOf/6gfUCAIKyjgQ/Kf//wfswAAAwQA/+MYxAYOqrbdkZGQAMA7DJLCsQxNOij///////////+tv///3RWiZGBEhsf/FO/+LoCSFs1dFVS/g8f/4Mhv0nhqAieHleLy/+MYxAYOOrbMAY2gABf/////////////////usPJ66R0wI4boY9/8jQYg//g2SPx1M0N3Z0kVJLIs///Uw4aMyvHJJYmPBYG/+MYxAgPMALBucAQAoGgaBoFQVBUFQWDv6gZBUFQVBUGgaBr5YSgqCoKhIGg7+IQVBUFQVBoGga//SsFSoKnf/iVTEFNRTMu/+MYxAYAAANIAAAAADEwMFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV`;\nconst MEDIA_STREAM_DEFAULT = {\n  audio: false,\n  video: true\n};\nconst CANVAS_STYLES_LAYER = {\n  lineWidth: 1,\n  strokeStyle: 'green',\n  fillStyle: '#55f02880'\n};\nconst CANVAS_STYLES_TEXT = {\n  font: '15px serif',\n  strokeStyle: '#fff0',\n  fillStyle: '#ff0000'\n};\nconst CONFIG_DEFAULT = {\n  src: '',\n  fps: 30,\n  vibrate: 300,\n  decode: 'utf-8',\n  isBeep: true,\n  constraints: MEDIA_STREAM_DEFAULT,\n  canvasStyles: [CANVAS_STYLES_LAYER, CANVAS_STYLES_TEXT]\n};\n\n/**\n * WASM_READY\n * @returns\n */\nvar WASM_READY = () => 'zbarWasm' in window;\n/**\n * OVERRIDES\n * @param variableKey\n * @param config\n * @param defaultConfig\n * @returns\n */\nconst OVERRIDES = (variableKey, config, defaultConfig) => {\n  if (config && Object.keys(config[variableKey]).length) {\n    for (const key in defaultConfig) {\n      const cloneDeep = JSON.parse(JSON.stringify({\n        ...config[variableKey],\n        ...{\n          [key]: defaultConfig[key]\n        }\n      }));\n      config[variableKey] = config[variableKey].hasOwnProperty(key) ? config[variableKey] : cloneDeep;\n    }\n    return config[variableKey];\n  } else {\n    return defaultConfig;\n  }\n};\n/**\n * AS_COMPLETE\n * @param as\n * @param data\n * @param error\n */\nconst AS_COMPLETE = (as, data, error) => {\n  error ? as.error(error) : as.next(data);\n  as.complete();\n};\n/**\n * PLAY_AUDIO\n * @param isPlay\n * @returns\n */\nconst PLAY_AUDIO = (isPlay = false) => {\n  if (isPlay === false) return;\n  const audio = new Audio(BEEP);\n  // when the sound has been loaded, execute your code\n  audio.oncanplaythrough = () => {\n    const promise = audio.play();\n    if (promise) {\n      promise.catch(e => {\n        if (e.name === \"NotAllowedError\" || e.name === \"NotSupportedError\") {\n          // console.log(e.name);\n        }\n      });\n    }\n  };\n};\n/**\n * DRAW_RESULT_APPEND_CHILD\n * @param code\n * @param oriCanvas\n * @param elTarget\n * @param canvasStyles\n */\nconst DRAW_RESULT_APPEND_CHILD = (code, oriCanvas, elTarget, canvasStyles) => {\n  let widthZoom;\n  let heightZoom;\n  let oriWidth = oriCanvas.width;\n  let oriHeight = oriCanvas.height;\n  let oriWHRatio = oriWidth / oriHeight;\n  let imgWidth = parseInt(getComputedStyle(oriCanvas).width);\n  let imgHeight = parseInt(getComputedStyle(oriCanvas).height);\n  let imgWHRatio = imgWidth / imgHeight;\n  elTarget.innerHTML = '';\n  if (oriWHRatio > imgWHRatio) {\n    widthZoom = imgWidth / oriWidth;\n    heightZoom = imgWidth / oriWHRatio / oriHeight;\n  } else {\n    heightZoom = imgHeight / oriHeight;\n    widthZoom = imgHeight * oriWHRatio / oriWidth;\n  }\n  for (let i = 0; i < code.length; i++) {\n    const _code = code[i];\n    // New canvas\n    let cvs = document.createElement(\"canvas\");\n    let ctx = cvs.getContext('2d', {\n      willReadFrequently: true\n    });\n    let loc = {};\n    let X = [];\n    let Y = [];\n    let fontSize = 0;\n    let svgSize = 0;\n    let num = canvasStyles.length === 2 && canvasStyles[1]?.font?.replace(/[^0-9]/g, '');\n    if (num && /[0-9]/g.test(num)) {\n      fontSize = parseFloat(num);\n      svgSize = (widthZoom || 1) * fontSize;\n      if (Number.isNaN(svgSize)) {\n        svgSize = fontSize;\n      }\n    }\n    // Point x,y\n    const points = _code.points;\n    for (let j = 0; j < points.length; j++) {\n      const xj = points?.[j]?.x ?? 0;\n      const yj = points?.[j]?.y ?? 0;\n      loc[`x${j + 1}`] = xj;\n      loc[`y${j + 1}`] = yj;\n      X.push(xj);\n      Y.push(yj);\n    }\n    // Min max\n    let maxX = Math.max(...X);\n    let minX = Math.min(...X);\n    let maxY = Math.max(...Y);\n    let minY = Math.min(...Y);\n    // Add class\n    cvs.setAttribute('class', 'qrcode-polygon');\n    // Size with screen zoom\n    if (oriWHRatio > imgWHRatio) {\n      cvs.style.top = minY * heightZoom + (imgHeight - imgWidth / oriWHRatio) * 0.5 + \"px\";\n      cvs.style.left = minX * widthZoom + \"px\";\n      cvs.width = (maxX - minX) * widthZoom;\n      cvs.height = (maxY - minY) * widthZoom;\n    } else {\n      cvs.style.top = minY * heightZoom + \"px\";\n      cvs.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\n      cvs.width = (maxX - minX) * heightZoom;\n      cvs.height = (maxY - minY) * heightZoom;\n    }\n    // Style for canvas\n    for (const key in canvasStyles[0]) {\n      ctx[key] = canvasStyles[0][key];\n    }\n    // polygon [x,y, x,y, x,y.....];\n    const polygon = [];\n    for (let k = 0; k < X.length; k++) {\n      polygon.push((loc[`x${k + 1}`] - minX) * heightZoom);\n      polygon.push((loc[`y${k + 1}`] - minY) * widthZoom);\n    }\n    // Copy array\n    const shape = polygon.slice(0);\n    // Draw polygon\n    ctx.beginPath();\n    ctx.moveTo(shape.shift(), shape.shift());\n    while (shape.length) {\n      ctx.lineTo(shape.shift(), shape.shift()); //x,y\n    }\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n    if (fontSize) {\n      // Tooltip result\n      const qrcodeTooltipTemp = document.createElement('div');\n      qrcodeTooltipTemp.setAttribute('class', 'qrcode-tooltip-temp');\n      qrcodeTooltipTemp.innerText = _code.value;\n      qrcodeTooltipTemp.style.maxWidth = (oriWidth > window.innerWidth ? window.innerWidth * 0.9 : oriWidth) + \"px\";\n      qrcodeTooltipTemp.style.borderRadius = `clamp(1px, ${widthZoom * fontSize - 10}px, 3px)`;\n      qrcodeTooltipTemp.style.paddingBlock = `clamp(1px, ${widthZoom * fontSize - 10}px, 3px)`; // top - bottom\n      qrcodeTooltipTemp.style.paddingInline = `clamp(2.5px, ${widthZoom * fontSize - 6}px, 10px)`; // left - right\n      const xmlString = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${svgSize}\" height=\"${svgSize}\" viewBox=\"0 0 512 512\"><rect x=\"128\" y=\"128\" width=\"336\" height=\"336\" rx=\"57\" ry=\"57\"></rect><path d=\"M383.5,128l.5-24a56.16,56.16,0,0,0-56-56H112a64.19,64.19,0,0,0-64,64V328a56.16,56.16,0,0,0,56,56h24\"></path></svg>`;\n      const xmlDom = new DOMParser().parseFromString(xmlString, 'application/xml');\n      const svgDom = qrcodeTooltipTemp.ownerDocument.importNode(xmlDom.documentElement, true);\n      svgDom.style.marginLeft = `clamp(1px, ${widthZoom * fontSize - 10}px, 3px)`; // left - right\n      qrcodeTooltipTemp.appendChild(svgDom);\n      svgDom.addEventListener(\"click\", () => window.navigator['clipboard'].writeText(_code.value));\n      qrcodeTooltipTemp.addEventListener(\"click\", () => window.navigator['clipboard'].writeText(_code.value));\n      // Tooltip box\n      const qrcodeTooltip = document.createElement('div');\n      qrcodeTooltip.setAttribute('class', 'qrcode-tooltip');\n      qrcodeTooltip.appendChild(qrcodeTooltipTemp);\n      heightZoom = imgHeight / oriHeight;\n      widthZoom = imgHeight * oriWHRatio / oriWidth;\n      qrcodeTooltip.style.fontSize = widthZoom * fontSize + 'px';\n      qrcodeTooltip.style.top = minY * heightZoom + \"px\";\n      qrcodeTooltip.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\n      qrcodeTooltip.style.width = (maxX - minX) * heightZoom + \"px\";\n      qrcodeTooltip.style.height = (maxY - minY) * heightZoom + \"px\";\n      // Result text\n      const resultText = document.createElement('span');\n      resultText.innerText = _code.value;\n      // Set position result text\n      resultText.style.top = minY * heightZoom + -20 * heightZoom + \"px\";\n      resultText.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\n      // Style text\n      const ff = canvasStyles[1]?.font?.split(' ')?.[1];\n      resultText.style.fontFamily = ff;\n      resultText.style.fontSize = widthZoom * fontSize + 'px';\n      resultText.style.color = canvasStyles?.[1]?.fillStyle;\n      elTarget?.appendChild(qrcodeTooltip);\n      elTarget?.appendChild(resultText);\n    }\n    elTarget?.appendChild(cvs);\n  }\n  ;\n};\n/**\n * DRAW_RESULT_ON_CANVAS\n * @param code\n * @param cvs\n * @param canvasStyles\n */\nconst DRAW_RESULT_ON_CANVAS = (code, cvs, canvasStyles) => {\n  let ctx = cvs.getContext('2d', {\n    willReadFrequently: true\n  });\n  for (let i = 0; i < code.length; i++) {\n    const _code = code[i];\n    let loc = {};\n    let X = [];\n    let Y = [];\n    let fontSize = 0;\n    const fs = canvasStyles[1]?.font?.split(' ')?.[0];\n    let num = fs?.replace(/[^0-9]/g, '');\n    if (num && /[0-9]/g.test(num)) {\n      fontSize = parseFloat(num);\n    }\n    // Point x,y\n    const points = _code.points;\n    for (let j = 0; j < points.length; j++) {\n      const xj = points?.[j]?.x ?? 0;\n      const yj = points?.[j]?.y ?? 0;\n      loc[`x${j + 1}`] = xj;\n      loc[`y${j + 1}`] = yj;\n      X.push(xj);\n      Y.push(yj);\n    }\n    // Min max\n    let minX = Math.min(...X);\n    let minY = Math.min(...Y);\n    const styleLayer = () => {\n      for (const key in canvasStyles[0]) {\n        ctx[key] = canvasStyles[0][key];\n      }\n      // polygon [x,y, x,y, x,y.....];\n      const polygon = [];\n      for (let k = 0; k < X.length; k++) {\n        polygon.push(loc[`x${k + 1}`]);\n        polygon.push(loc[`y${k + 1}`]);\n      }\n      // Copy array\n      const shape = polygon.slice(0);\n      // Draw polygon\n      ctx.beginPath();\n      ctx.moveTo(shape.shift(), shape.shift());\n      while (shape.length) {\n        ctx.lineTo(shape.shift(), shape.shift()); //x,y\n      }\n      ctx.closePath();\n      ctx.fill();\n      ctx.stroke();\n    };\n    let cvs2 = document.createElement('canvas');\n    const styleText = () => {\n      const ff = canvasStyles[1]?.font?.split(' ')?.[1];\n      cvs2.height = cvs.height;\n      cvs2.width = cvs.width;\n      let ctx2 = cvs2.getContext('2d', {\n        willReadFrequently: true\n      });\n      ctx2.font = fontSize + `px ` + ff;\n      for (const key in canvasStyles[1]) {\n        ctx2[key] = canvasStyles[1][key];\n      }\n      FILL_TEXT_MULTI_LINE(ctx2, _code.value, minX, minY - 5);\n    };\n    styleLayer();\n    styleText();\n    // Merge cvs2 into cvs\n    ctx.drawImage(cvs2, 0, 0);\n  }\n  ;\n};\n/**\n * READ_AS_DATA_URL\n * @param file\n * @param configs\n * @returns\n */\nconst READ_AS_DATA_URL = (file, configs) => {\n  /** overrides **/\n  let decode = configs?.decode ?? CONFIG_DEFAULT.decode;\n  let canvasStyles = configs?.canvasStyles?.length === 2 ? configs?.canvasStyles : [CANVAS_STYLES_LAYER, CANVAS_STYLES_TEXT];\n  let isBeep = configs?.isBeep ?? CONFIG_DEFAULT.isBeep;\n  /** drawImage **/\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      const objectFile = {\n        name: file.name,\n        file: file,\n        url: URL.createObjectURL(file)\n      };\n      // Set the src of this Image object.\n      const image = new Image();\n      // Setting cross origin value to anonymous\n      image.setAttribute('crossOrigin', 'anonymous');\n      // When our image has loaded.\n      image.onload = /*#__PURE__*/_asyncToGenerator(function* () {\n        // Get the canvas element by using the getElementById method.\n        const canvas = document.createElement('canvas');\n        // HTMLImageElement size\n        canvas.width = image.naturalWidth || image.width;\n        canvas.height = image.naturalHeight || image.height;\n        // Get a 2D drawing context for the canvas.\n        const ctx = canvas.getContext('2d');\n        // Draw image\n        ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n        // Data image\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        // Scanner\n        if (WASM_READY()) {\n          const code = yield zbarWasm.scanImageData(imageData);\n          if (code?.length) {\n            // Decode\n            code.forEach(s => s.value = s.decode(decode?.toLocaleLowerCase()));\n            // Overlay\n            DRAW_RESULT_ON_CANVAS(code, canvas, canvasStyles);\n            // Emit object\n            const blob = yield CANVAS_TO_BLOB(canvas);\n            const url = URL.createObjectURL(blob);\n            const blobToFile = (theBlob, fileName) => new File([theBlob], fileName, {\n              lastModified: new Date().getTime(),\n              type: theBlob.type\n            });\n            resolve(Object.assign({}, objectFile, {\n              data: code,\n              url: url,\n              canvas: canvas,\n              file: blobToFile(blob, objectFile.name)\n            }));\n            PLAY_AUDIO(isBeep);\n          } else {\n            resolve(Object.assign({}, objectFile, {\n              data: code,\n              canvas: canvas\n            }));\n          }\n        }\n      });\n      // Set src\n      image.src = objectFile.url;\n    };\n    fileReader.onerror = error => reject(error);\n    fileReader.readAsDataURL(file);\n  });\n};\n/**\n * Convert canvas to blob\n * canvas.toBlob((blob) => { .. }, 'image/jpeg', 0.95); // JPEG at 95% quality\n * @param canvas\n * @param type\n * @returns\n */\nconst CANVAS_TO_BLOB = (canvas, type) => {\n  return new Promise((resolve, reject) => canvas.toBlob(blob => resolve(blob), type));\n};\n/**\n * Convert blob to file\n * @param theBlob\n * @param fileName\n * @returns\n */\nconst BLOB_TO_FILE = (theBlob, fileName) => {\n  return new File([theBlob], fileName, {\n    lastModified: new Date().getTime(),\n    type: theBlob.type\n  });\n};\n/**\n * FILES_TO_SCAN\n * @param files\n * @param configs\n * @param percentage\n * @param quality\n * @param as\n * @returns\n */\nconst FILES_TO_SCAN = (files = [], configs, percentage, quality, as = new AsyncSubject()) => {\n  COMPRESS_IMAGE_FILE(files, percentage, quality).then(_files => {\n    Promise.all(Object.assign([], _files).map(m => READ_AS_DATA_URL(m, configs))).then(img => {\n      AS_COMPLETE(as, img);\n    }).catch(error => AS_COMPLETE(as, null, error));\n  });\n  return as;\n};\n/**\n * FILL_TEXT_MULTI_LINE\n * @param ctx\n * @param text\n * @param x\n * @param y\n */\nconst FILL_TEXT_MULTI_LINE = (ctx, text, x, y) => {\n  let lineHeight = ctx.measureText(\"M\").width * 1.2;\n  let lines = text.split(\"\\n\");\n  for (var i = 0; i < lines.length; ++i) {\n    ctx.fillText(lines[i], x, y);\n    ctx.strokeText(lines[i], x, y);\n    y += lineHeight;\n  }\n};\n/**\n * COMPRESS_IMAGE_FILE\n * @param files\n * @param percentage\n * @param quality\n * @returns\n */\nconst COMPRESS_IMAGE_FILE = (files = [], percentage = 100, quality = 100) => {\n  if (files.length && (percentage < 100 || quality < 100)) {\n    // Have files\n    const resizedFiles = [];\n    return new Promise((resolve, reject) => {\n      for (const file of files) {\n        const image = new Image();\n        const reader = new FileReader();\n        reader.onload = function (event) {\n          image.onload = function () {\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n            const newWidth = Math.round(image.width * (percentage / 100));\n            const newHeight = Math.round(image.height * (percentage / 100));\n            canvas.width = newWidth;\n            canvas.height = newHeight;\n            ctx.drawImage(image, 0, 0, newWidth, newHeight);\n            canvas.toBlob(blob => {\n              const resizedFile = new File([blob], file.name, {\n                type: file.type\n              });\n              resizedFiles.push(resizedFile);\n              if (files.length === resizedFiles.length) {\n                resolve(resizedFiles);\n              }\n            }, file.type, quality / 100);\n          };\n          image.src = event.target.result;\n        };\n        reader.onerror = error => reject(error);\n        reader.readAsDataURL(file);\n      }\n    });\n  } else {\n    // No files selected\n    return Promise.resolve(files);\n  }\n};\n/**\n * REMOVE_RESULT_PANEL\n * @param element\n */\nconst REMOVE_RESULT_PANEL = element => {\n  // clear text result and tooltip\n  Object.assign([], element.childNodes).forEach(el => element.removeChild(el));\n};\n/**\n * RESET_CANVAS\n * @param canvas\n */\nconst RESET_CANVAS = canvas => {\n  // reset canvas\n  const context = canvas.getContext('2d', {\n    willReadFrequently: true\n  });\n  // clear frame when reloop\n  context.clearRect(0, 0, canvas.width, canvas.height);\n};\n/**\n * UPDATE_WIDTH_HEIGHT_VIDEO\n * @param video\n * @param canvas\n */\nconst UPDATE_WIDTH_HEIGHT_VIDEO = (video, canvas) => {\n  video.style.width = canvas.offsetWidth + 'px';\n  video.style.height = canvas.offsetHeight + 'px';\n};\n/**\n * VIBRATE\n * @param time\n */\nconst VIBRATE = (time = 300) => {\n  time && IS_MOBILE() && window?.navigator?.vibrate(time);\n};\n/**\n * IS_MOBILE\n * @returns\n */\nconst IS_MOBILE = () => {\n  const vendor = navigator.userAgent || navigator['vendor'] || window['opera'];\n  const phone = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\n  const version = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i;\n  const isSafari = /^((?!chrome|android).)*safari/i;\n  return !!(phone.test(vendor) || version.test(vendor.substr(0, 4))) && !isSafari.test(vendor);\n};\nclass NgxScannerQrcodeService {\n  /**\n   * loadFiles\n   * @param files\n   * @param percentage\n   * @param quality\n   * @returns\n   */\n  loadFiles(files = [], percentage, quality) {\n    const as = new AsyncSubject();\n    COMPRESS_IMAGE_FILE(files, percentage, quality).then(_files => {\n      Promise.all(Object.assign([], _files).map(m => this.readAsDataURL(m))).then(img => AS_COMPLETE(as, img)).catch(error => AS_COMPLETE(as, null, error));\n    });\n    return as;\n  }\n  /**\n   * loadFilesToScan\n   * @param files\n   * @param config\n   * @param percentage\n   * @param quality\n   * @returns\n   */\n  loadFilesToScan(files = [], config, percentage, quality) {\n    return FILES_TO_SCAN(files, config, percentage, quality);\n  }\n  /**\n   * readAsDataURL\n   * @param file\n   * @returns\n   */\n  readAsDataURL(file) {\n    /** drawImage **/\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        const objectFile = {\n          name: file.name,\n          file: file,\n          url: URL.createObjectURL(file)\n        };\n        resolve(objectFile);\n      };\n      fileReader.onerror = error => reject(error);\n      fileReader.readAsDataURL(file);\n    });\n  }\n  static #_ = this.ɵfac = function NgxScannerQrcodeService_Factory(t) {\n    return new (t || NgxScannerQrcodeService)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgxScannerQrcodeService,\n    factory: NgxScannerQrcodeService.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxScannerQrcodeService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * LOAD_WASM\n * @param as\n * @param renderer\n * @returns\n */\nconst LOAD_WASM = (as = new AsyncSubject(), renderer) => {\n  let retry = 0;\n  const LOAD_WASM_RETRY = (isLoadWasmRemote = false) => {\n    const DONE = () => {\n      let timeoutId;\n      try {\n        const L = () => {\n          clearTimeout(timeoutId);\n          WASM_READY() ? setTimeout(() => AS_COMPLETE(as, true)) : timeoutId = setTimeout(() => L());\n        };\n        setTimeout(() => L());\n        setTimeout(() => clearTimeout(timeoutId), 3000);\n      } catch (error) {\n        clearTimeout(timeoutId);\n      }\n    };\n    const scriptRemote = document.querySelectorAll(`script[src=\"${WASMREMOTE}\"]`);\n    const scriptRemoteLatest = document.querySelectorAll(`script[src=\"${WASMREMOTELATEST}\"]`);\n    if (scriptRemote.length || scriptRemoteLatest.length) {\n      DONE();\n    } else {\n      const scriptProject = document.querySelectorAll(`script[src=\"${WASMPROJECT}\"]`);\n      if (scriptProject.length === 1) {\n        DONE();\n      } else {\n        scriptProject.forEach(f => f.remove());\n        if (renderer) {\n          const script = renderer.createElement(\"script\");\n          renderer.setAttribute(script, \"src\", isLoadWasmRemote ? WASMREMOTE : WASMPROJECT);\n          renderer.setAttribute(script, \"type\", \"text/javascript\");\n          renderer.setAttribute(script, \"async\", \"\");\n          renderer.appendChild(document.head, script);\n          script.onload = () => DONE();\n          script.onerror = () => {\n            if (retry < 2) {\n              document.head.removeChild(script);\n              LOAD_WASM_RETRY(true);\n            } else {\n              AS_COMPLETE(as, false, 'Could not load script ' + isLoadWasmRemote ? WASMREMOTE : WASMPROJECT);\n            }\n          };\n          retry += 1;\n        } else {\n          const mod = document.createElement('script');\n          mod.setAttribute(\"src\", isLoadWasmRemote ? WASMREMOTE : WASMPROJECT);\n          mod.setAttribute(\"type\", \"text/javascript\");\n          mod.setAttribute(\"async\", \"\");\n          document.head.appendChild(mod);\n          mod.onload = () => DONE();\n          mod.onerror = () => {\n            if (retry < 2) {\n              document.head.removeChild(mod);\n              LOAD_WASM_RETRY(true);\n            } else {\n              AS_COMPLETE(as, false, 'Could not load script ' + isLoadWasmRemote ? WASMREMOTE : WASMPROJECT);\n            }\n          };\n          retry += 1;\n        }\n      }\n    }\n  };\n  LOAD_WASM_RETRY();\n  return as;\n};\nclass NgxScannerQrcodeComponent {\n  constructor(renderer, elementRef) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    /**\n     * EventEmitter\n     */\n    this.event = new EventEmitter();\n    /**\n     * Input\n     */\n    this.src = CONFIG_DEFAULT.src;\n    this.fps = CONFIG_DEFAULT.fps;\n    this.vibrate = CONFIG_DEFAULT.vibrate;\n    this.decode = CONFIG_DEFAULT.decode;\n    this.isBeep = CONFIG_DEFAULT.isBeep;\n    this.config = CONFIG_DEFAULT;\n    this.constraints = CONFIG_DEFAULT.constraints;\n    this.canvasStyles = [CANVAS_STYLES_LAYER, CANVAS_STYLES_TEXT];\n    /**\n     * Export\n    */\n    this.isStart = false;\n    this.isPause = false;\n    this.isLoading = false;\n    this.isTorch = false;\n    this.data = new BehaviorSubject([]);\n    this.devices = new BehaviorSubject([]);\n    this.deviceIndexActive = 0;\n    this.dataForResize = [];\n    this.ready = new AsyncSubject();\n    this.STATUS = {\n      startON: () => this.isStart = true,\n      pauseON: () => this.isPause = true,\n      loadingON: () => this.isLoading = true,\n      startOFF: () => this.isStart = false,\n      pauseOFF: () => this.isPause = false,\n      loadingOFF: () => this.isLoading = false,\n      torchOFF: () => this.isTorch = false\n    };\n  }\n  ngOnInit() {\n    this.overrideConfig();\n    LOAD_WASM(this.ready, this.renderer).subscribe(() => {\n      if (this.src) {\n        this.loadImage(this.src);\n      }\n      this.resize();\n    });\n  }\n  /**\n   * start\n   * @param playDeviceCustom\n   * @returns\n   */\n  start(playDeviceCustom) {\n    const as = new AsyncSubject();\n    if (this.isStart) {\n      // Reject\n      AS_COMPLETE(as, false);\n    } else {\n      // fix safari\n      this.safariWebRTC(as, playDeviceCustom);\n    }\n    return as;\n  }\n  /**\n   * stop\n   * @returns\n   */\n  stop() {\n    this.STATUS.pauseOFF();\n    this.STATUS.startOFF();\n    this.STATUS.torchOFF();\n    this.STATUS.loadingOFF();\n    const as = new AsyncSubject();\n    try {\n      clearTimeout(this.rAF_ID);\n      this.video.nativeElement.srcObject.getTracks().forEach(track => {\n        track.stop();\n        AS_COMPLETE(as, true);\n      });\n      this.dataForResize = [];\n      RESET_CANVAS(this.canvas.nativeElement);\n      REMOVE_RESULT_PANEL(this.resultsPanel.nativeElement);\n    } catch (error) {\n      AS_COMPLETE(as, false, error);\n    }\n    return as;\n  }\n  /**\n   * play\n   * @returns\n   */\n  play() {\n    const as = new AsyncSubject();\n    if (this.isPause) {\n      this.video.nativeElement.play();\n      this.STATUS.pauseOFF();\n      this.requestAnimationFrame();\n      AS_COMPLETE(as, true);\n    } else {\n      AS_COMPLETE(as, false);\n    }\n    return as;\n  }\n  /**\n   * pause\n   * @returns\n   */\n  pause() {\n    const as = new AsyncSubject();\n    if (this.isStart) {\n      clearTimeout(this.rAF_ID);\n      this.video.nativeElement.pause();\n      this.STATUS.pauseON();\n      AS_COMPLETE(as, true);\n    } else {\n      AS_COMPLETE(as, false);\n    }\n    return as;\n  }\n  /**\n   * playDevice\n   * @param deviceId\n   * @param as\n   * @returns\n   */\n  playDevice(deviceId, as = new AsyncSubject()) {\n    const constraints = this.getConstraints();\n    const existDeviceId = this.isStart && constraints ? constraints.deviceId !== deviceId : true;\n    switch (true) {\n      case deviceId === 'null' || deviceId === 'undefined' || !deviceId:\n        stop();\n        this.stop();\n        AS_COMPLETE(as, false);\n        break;\n      case deviceId && existDeviceId:\n        stop();\n        this.stop();\n        // Loading on\n        this.STATUS.loadingON();\n        this.deviceIndexActive = this.devices.value.findIndex(f => f.deviceId === deviceId);\n        const constraints = {\n          ...this.constraints,\n          audio: false,\n          video: {\n            deviceId: deviceId,\n            ...this.constraints.video\n          }\n        };\n        // MediaStream\n        navigator.mediaDevices.getUserMedia(constraints).then(stream => {\n          this.video.nativeElement.srcObject = stream;\n          this.video.nativeElement.onloadedmetadata = () => {\n            this.video.nativeElement.play();\n            this.requestAnimationFrame();\n            AS_COMPLETE(as, true);\n            this.STATUS.startON();\n            this.STATUS.loadingOFF();\n          };\n        }).catch(error => {\n          this.eventEmit(false);\n          AS_COMPLETE(as, false, error);\n          this.STATUS.startOFF();\n          this.STATUS.loadingOFF();\n        });\n        break;\n      default:\n        AS_COMPLETE(as, false);\n        this.STATUS.loadingOFF();\n        break;\n    }\n    return as;\n  }\n  /**\n   * loadImage\n   * @param src\n   * @returns\n   */\n  loadImage(src) {\n    const as = new AsyncSubject();\n    // Loading on\n    this.STATUS.startOFF();\n    this.STATUS.loadingON();\n    // Set the src of this Image object.\n    const image = new Image();\n    // Setting cross origin value to anonymous\n    image.setAttribute('crossOrigin', 'anonymous');\n    // When our image has loaded.\n    image.onload = () => {\n      WASM_READY() && this.drawImage(image, flag => {\n        AS_COMPLETE(as, flag);\n        this.STATUS.startOFF();\n        this.STATUS.loadingOFF();\n      });\n    };\n    // Set src\n    image.src = src;\n    return as;\n  }\n  /**\n   * torcher\n   * @returns\n   */\n  torcher() {\n    const as = this.applyConstraints({\n      advanced: [{\n        torch: this.isTorch\n      }]\n    });\n    as.subscribe(() => false, () => this.isTorch = !this.isTorch);\n    return as;\n  }\n  /**\n   * applyConstraints\n   * @param constraints\n   * @param deviceIndex\n   * @returns\n   */\n  applyConstraints(constraints, deviceIndex = 0) {\n    var _this = this;\n    const as = new AsyncSubject();\n    if (this.isStart) {\n      const stream = this.video.nativeElement.srcObject;\n      if (deviceIndex !== null || deviceIndex !== undefined || !Number.isNaN(deviceIndex)) {\n        const videoTrack = stream.getVideoTracks()[deviceIndex];\n        const imageCapture = new window.ImageCapture(videoTrack);\n        imageCapture.getPhotoCapabilities().then( /*#__PURE__*/_asyncToGenerator(function* () {\n          yield videoTrack.applyConstraints(constraints);\n          UPDATE_WIDTH_HEIGHT_VIDEO(_this.video.nativeElement, _this.canvas.nativeElement);\n          AS_COMPLETE(as, true);\n        })).catch(error => {\n          switch (error?.name) {\n            case 'NotFoundError':\n            case 'DevicesNotFoundError':\n              AS_COMPLETE(as, false, 'Required track is missing');\n              break;\n            case 'NotReadableError':\n            case 'TrackStartError':\n              AS_COMPLETE(as, false, 'Webcam or mic are already in use');\n              break;\n            case 'OverconstrainedError':\n            case 'ConstraintNotSatisfiedError':\n              AS_COMPLETE(as, false, 'Constraints can not be satisfied by avb. devices');\n              break;\n            case 'NotAllowedError':\n            case 'PermissionDeniedError':\n              AS_COMPLETE(as, false, 'Permission denied in browser');\n              break;\n            case 'TypeError':\n              AS_COMPLETE(as, false, 'Empty constraints object');\n              break;\n            default:\n              AS_COMPLETE(as, false, error);\n              break;\n          }\n        });\n      } else {\n        AS_COMPLETE(as, false, 'Please check again deviceIndex');\n      }\n    } else {\n      AS_COMPLETE(as, false, 'Please start the scanner');\n    }\n    return as;\n  }\n  /**\n   * getConstraints\n   * @param deviceIndex\n   * @returns\n   */\n  getConstraints(deviceIndex = 0) {\n    const stream = this.video.nativeElement.srcObject;\n    const videoTrack = stream?.getVideoTracks()[deviceIndex];\n    return videoTrack?.getConstraints();\n  }\n  /**\n   * download\n   * @param fileName\n   * @param percentage\n   * @param quality\n   * @returns\n   */\n  download(fileName = `ngx_scanner_qrcode_${Date.now()}.png`, percentage, quality) {\n    var _this2 = this;\n    const as = new AsyncSubject();\n    _asyncToGenerator(function* () {\n      const blob = yield CANVAS_TO_BLOB(_this2.canvas.nativeElement);\n      const file = BLOB_TO_FILE(blob, fileName);\n      FILES_TO_SCAN([file], _this2.config, percentage, quality, as).subscribe(res => {\n        res.forEach(item => {\n          if (item?.data?.length) {\n            const link = document.createElement('a');\n            link.href = item.url;\n            link.download = item.name;\n            link.click();\n            link.remove();\n          }\n        });\n      });\n    })();\n    return as;\n  }\n  /**\n   * resize\n   */\n  resize() {\n    window.addEventListener(\"resize\", () => {\n      DRAW_RESULT_APPEND_CHILD(this.dataForResize, this.canvas.nativeElement, this.resultsPanel.nativeElement, this.canvasStyles);\n      UPDATE_WIDTH_HEIGHT_VIDEO(this.video.nativeElement, this.canvas.nativeElement);\n    });\n  }\n  /**\n   * overrideConfig\n   */\n  overrideConfig() {\n    if ('src' in this.config) this.src = this.config.src;\n    if ('fps' in this.config) this.fps = this.config.fps;\n    if ('vibrate' in this.config) this.vibrate = this.config.vibrate;\n    if ('decode' in this.config) this.decode = this.config.decode;\n    if ('isBeep' in this.config) this.isBeep = this.config.isBeep;\n    if ('constraints' in this.config) this.constraints = OVERRIDES('constraints', this.config, MEDIA_STREAM_DEFAULT);\n    if ('canvasStyles' in this.config && this.config?.canvasStyles?.length === 2) this.canvasStyles = this.config.canvasStyles;\n  }\n  /**\n   * safariWebRTC\n   * Fix issue on safari\n   * https://webrtchacks.com/guide-to-safari-webrtc\n   * @param as\n   * @param playDeviceCustom\n   */\n  safariWebRTC(as, playDeviceCustom) {\n    // Loading on\n    this.STATUS.startOFF();\n    this.STATUS.loadingON();\n    navigator.mediaDevices.getUserMedia(this.constraints).then(stream => {\n      stream.getTracks().forEach(track => track.stop());\n      this.loadAllDevices(as, playDeviceCustom);\n    }).catch(error => {\n      AS_COMPLETE(as, false, error);\n      this.STATUS.startOFF();\n      this.STATUS.loadingOFF();\n    });\n  }\n  /**\n   * loadAllDevices\n   * @param as\n   * @param playDeviceCustom\n   */\n  loadAllDevices(as, playDeviceCustom) {\n    navigator.mediaDevices.enumerateDevices().then(devices => {\n      let cameraDevices = devices.filter(f => f.kind == 'videoinput');\n      this.devices.next(cameraDevices);\n      if (cameraDevices?.length > 0) {\n        AS_COMPLETE(as, cameraDevices);\n        playDeviceCustom ? playDeviceCustom(cameraDevices) : this.playDevice(cameraDevices[0].deviceId);\n      } else {\n        AS_COMPLETE(as, false, 'No camera detected.');\n        this.STATUS.startOFF();\n        this.STATUS.loadingOFF();\n      }\n    }).catch(error => {\n      AS_COMPLETE(as, false, error);\n      this.STATUS.startOFF();\n      this.STATUS.loadingOFF();\n    });\n  }\n  /**\n   * drawImage\n   * @param element\n   * @param callback\n   */\n  drawImage(element, callback = () => {}) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      // Get the canvas element by using the getElementById method.\n      const canvas = _this3.canvas.nativeElement;\n      // Get a 2D drawing context for the canvas.\n      const ctx = canvas.getContext('2d', {\n        willReadFrequently: true\n      });\n      // HTMLImageElement size\n      if (element instanceof HTMLImageElement) {\n        canvas.width = element.naturalWidth;\n        canvas.height = element.naturalHeight;\n        element.style.visibility = '';\n        _this3.video.nativeElement.style.visibility = 'hidden';\n        // Image center and auto scale\n        _this3.renderer.setStyle(_this3.elementRef.nativeElement, 'width', canvas.width + 'px');\n        _this3.renderer.setStyle(_this3.elementRef.nativeElement, 'maxWidth', 100 + '%');\n        _this3.renderer.setStyle(_this3.elementRef.nativeElement, 'display', 'inline-block');\n      }\n      // HTMLVideoElement size\n      if (element instanceof HTMLVideoElement) {\n        canvas.width = element.videoWidth;\n        canvas.height = element.videoHeight;\n        element.style.visibility = '';\n        _this3.canvas.nativeElement.style.visibility = 'hidden';\n      }\n      // Set width, height for video element\n      UPDATE_WIDTH_HEIGHT_VIDEO(_this3.video.nativeElement, canvas);\n      // clear frame\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      // Draw image\n      ctx.drawImage(element, 0, 0, canvas.width, canvas.height);\n      // Data image\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      // Draw frame\n      const code = yield zbarWasm.scanImageData(imageData);\n      if (code?.length) {\n        // Decode\n        code.forEach(s => s.value = s.decode(_this3.decode?.toLocaleLowerCase()));\n        // Overlay\n        DRAW_RESULT_APPEND_CHILD(code, Object.freeze(_this3.canvas.nativeElement), _this3.resultsPanel.nativeElement, _this3.canvasStyles);\n        // To blob and emit data\n        const EMIT_DATA = () => {\n          _this3.eventEmit(code);\n          _this3.dataForResize = code;\n        };\n        // HTMLImageElement\n        if (element instanceof HTMLImageElement) {\n          callback(true);\n          EMIT_DATA();\n          VIBRATE(_this3.vibrate);\n          PLAY_AUDIO(_this3.isBeep);\n        }\n        // HTMLVideoElement\n        if (element instanceof HTMLVideoElement) {\n          EMIT_DATA();\n          VIBRATE(_this3.vibrate);\n          PLAY_AUDIO(_this3.isBeep);\n        }\n      } else {\n        callback(false);\n        REMOVE_RESULT_PANEL(_this3.resultsPanel.nativeElement);\n        _this3.dataForResize = [];\n      }\n    })();\n  }\n  /**\n   * eventEmit\n   * @param response\n   */\n  eventEmit(response = false) {\n    response !== false && this.data.next(response || []);\n    response !== false && this.event.emit(response || []);\n  }\n  /**\n   * Single-thread\n   * Loop Recording on Camera\n   * Must be destroy request\n   * Not using: requestAnimationFrame\n   * @param delay\n   */\n  requestAnimationFrame(delay = 100) {\n    try {\n      clearTimeout(this.rAF_ID);\n      this.rAF_ID = setTimeout(() => {\n        if (this.video.nativeElement.readyState === this.video.nativeElement.HAVE_ENOUGH_DATA) {\n          delay = 0; // Appy first request\n          WASM_READY() && this.drawImage(this.video.nativeElement);\n          this.isStart && !this.isPause && this.requestAnimationFrame(delay);\n        }\n      }, /*avoid cache mediaStream*/delay || this.fps);\n    } catch (error) {\n      clearTimeout(this.rAF_ID);\n    }\n  }\n  /**\n   * isReady\n   */\n  get isReady() {\n    return this.ready;\n  }\n  ngOnDestroy() {\n    this.pause();\n  }\n  static #_ = this.ɵfac = function NgxScannerQrcodeComponent_Factory(t) {\n    return new (t || NgxScannerQrcodeComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgxScannerQrcodeComponent,\n    selectors: [[\"ngx-scanner-qrcode\"]],\n    viewQuery: function NgxScannerQrcodeComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.video = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.resultsPanel = _t.first);\n      }\n    },\n    hostAttrs: [1, \"ngx-scanner-qrcode\"],\n    inputs: {\n      src: \"src\",\n      fps: \"fps\",\n      vibrate: \"vibrate\",\n      decode: \"decode\",\n      isBeep: \"isBeep\",\n      config: \"config\",\n      constraints: \"constraints\",\n      canvasStyles: \"canvasStyles\"\n    },\n    outputs: {\n      event: \"event\"\n    },\n    exportAs: [\"scanner\"],\n    decls: 6,\n    vars: 0,\n    consts: [[\"resultsPanel\", \"\"], [\"canvas\", \"\"], [\"video\", \"\"], [1, \"origin-overlay\"], [1, \"origin-canvas\"], [\"playsinline\", \"\", 1, \"origin-video\"]],\n    template: function NgxScannerQrcodeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 3, 0)(2, \"canvas\", 4, 1)(4, \"video\", 5, 2);\n      }\n    },\n    styles: [\".ngx-scanner-qrcode{display:block;position:relative}.origin-overlay{width:100%;position:absolute}.origin-overlay span{z-index:2;text-align:left;position:absolute}.origin-overlay .qrcode-polygon{z-index:1;position:absolute}.origin-canvas{width:100%;position:absolute}.origin-video{width:100%;background-color:#262626}.qrcode-tooltip{z-index:3;position:absolute}.qrcode-tooltip:hover .qrcode-tooltip-temp{display:block;position:absolute;cursor:copy}.qrcode-tooltip:hover .qrcode-tooltip-temp:active{color:#afafaf}.qrcode-tooltip .qrcode-tooltip-temp{bottom:0;left:50%;color:#fff;text-align:left;display:none;width:max-content;word-wrap:break-word;transform:translate(-50%);transform-style:preserve-3d;background-color:#000000d0;box-shadow:1px 1px 20px #000000e0}.qrcode-tooltip .qrcode-tooltip-temp svg{cursor:pointer}.qrcode-tooltip .qrcode-tooltip-temp svg rect{fill:none;stroke:#fff;stroke-linejoin:round;stroke-width:32px}.qrcode-tooltip .qrcode-tooltip-temp svg path{fill:none;stroke:#fff;stroke-linecap:round;stroke-linejoin:round;stroke-width:32px}.qrcode-tooltip .qrcode-tooltip-temp svg:active rect{stroke:#afafaf}.qrcode-tooltip .qrcode-tooltip-temp svg:active path{stroke:#afafaf}\\n\"],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxScannerQrcodeComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-scanner-qrcode',\n      template: `<div #resultsPanel class=\"origin-overlay\"></div><canvas #canvas class=\"origin-canvas\"></canvas><video #video playsinline class=\"origin-video\"></video>`,\n      host: {\n        'class': 'ngx-scanner-qrcode'\n      },\n      exportAs: 'scanner',\n      inputs: ['src', 'fps', 'vibrate', 'decode', 'isBeep', 'config', 'constraints', 'canvasStyles'],\n      outputs: ['event'],\n      queries: {\n        video: new ViewChild('video'),\n        canvas: new ViewChild('canvas'),\n        resultsPanel: new ViewChild('resultsPanel')\n      },\n      encapsulation: ViewEncapsulation.None,\n      styles: [\".ngx-scanner-qrcode{display:block;position:relative}.origin-overlay{width:100%;position:absolute}.origin-overlay span{z-index:2;text-align:left;position:absolute}.origin-overlay .qrcode-polygon{z-index:1;position:absolute}.origin-canvas{width:100%;position:absolute}.origin-video{width:100%;background-color:#262626}.qrcode-tooltip{z-index:3;position:absolute}.qrcode-tooltip:hover .qrcode-tooltip-temp{display:block;position:absolute;cursor:copy}.qrcode-tooltip:hover .qrcode-tooltip-temp:active{color:#afafaf}.qrcode-tooltip .qrcode-tooltip-temp{bottom:0;left:50%;color:#fff;text-align:left;display:none;width:max-content;word-wrap:break-word;transform:translate(-50%);transform-style:preserve-3d;background-color:#000000d0;box-shadow:1px 1px 20px #000000e0}.qrcode-tooltip .qrcode-tooltip-temp svg{cursor:pointer}.qrcode-tooltip .qrcode-tooltip-temp svg rect{fill:none;stroke:#fff;stroke-linejoin:round;stroke-width:32px}.qrcode-tooltip .qrcode-tooltip-temp svg path{fill:none;stroke:#fff;stroke-linecap:round;stroke-linejoin:round;stroke-width:32px}.qrcode-tooltip .qrcode-tooltip-temp svg:active rect{stroke:#afafaf}.qrcode-tooltip .qrcode-tooltip-temp svg:active path{stroke:#afafaf}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\nvar ScannerQRCodeSymbolType;\n(function (ScannerQRCodeSymbolType) {\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_NONE\"] = 0] = \"ScannerQRCode_NONE\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_PARTIAL\"] = 1] = \"ScannerQRCode_PARTIAL\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_EAN2\"] = 2] = \"ScannerQRCode_EAN2\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_EAN5\"] = 5] = \"ScannerQRCode_EAN5\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_EAN8\"] = 8] = \"ScannerQRCode_EAN8\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_UPCE\"] = 9] = \"ScannerQRCode_UPCE\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_ISBN10\"] = 10] = \"ScannerQRCode_ISBN10\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_UPCA\"] = 12] = \"ScannerQRCode_UPCA\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_EAN13\"] = 13] = \"ScannerQRCode_EAN13\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_ISBN13\"] = 14] = \"ScannerQRCode_ISBN13\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_COMPOSITE\"] = 15] = \"ScannerQRCode_COMPOSITE\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_I25\"] = 25] = \"ScannerQRCode_I25\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_DATABAR\"] = 34] = \"ScannerQRCode_DATABAR\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_DATABAR_EXP\"] = 35] = \"ScannerQRCode_DATABAR_EXP\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_CODABAR\"] = 38] = \"ScannerQRCode_CODABAR\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_CODE39\"] = 39] = \"ScannerQRCode_CODE39\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_PDF417\"] = 57] = \"ScannerQRCode_PDF417\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_QRCODE\"] = 64] = \"ScannerQRCode_QRCODE\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_SQCODE\"] = 80] = \"ScannerQRCode_SQCODE\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_CODE93\"] = 93] = \"ScannerQRCode_CODE93\";\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_CODE128\"] = 128] = \"ScannerQRCode_CODE128\";\n  /*\n   * Please see _ScannerQRCode_get_symbol_hash() if adding\n   * anything after 128\n   */\n  /** mask for base symbol type.\n   * @deprecated in 0.11, remove this from existing code\n   */\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_SYMBOL\"] = 255] = \"ScannerQRCode_SYMBOL\";\n  /** 2-digit add-on flag.\n   * @deprecated in 0.11, a ::ScannerQRCode_EAN2 component is used for\n   * 2-digit GS1 add-ons\n   */\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_ADDON2\"] = 512] = \"ScannerQRCode_ADDON2\";\n  /** 5-digit add-on flag.\n   * @deprecated in 0.11, a ::ScannerQRCode_EAN5 component is used for\n   * 5-digit GS1 add-ons\n   */\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_ADDON5\"] = 1280] = \"ScannerQRCode_ADDON5\";\n  /** add-on flag mask.\n   * @deprecated in 0.11, GS1 add-ons are represented using composite\n   * symbols of type ::ScannerQRCode_COMPOSITE; add-on components use ::ScannerQRCode_EAN2\n   * or ::ScannerQRCode_EAN5\n   */\n  ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_ADDON\"] = 1792] = \"ScannerQRCode_ADDON\";\n})(ScannerQRCodeSymbolType || (ScannerQRCodeSymbolType = {}));\nvar ScannerQRCodeConfigType;\n(function (ScannerQRCodeConfigType) {\n  ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_ENABLE\"] = 0] = \"ScannerQRCode_CFG_ENABLE\";\n  ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_ADD_CHECK\"] = 1] = \"ScannerQRCode_CFG_ADD_CHECK\";\n  ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_EMIT_CHECK\"] = 2] = \"ScannerQRCode_CFG_EMIT_CHECK\";\n  ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_ASCII\"] = 3] = \"ScannerQRCode_CFG_ASCII\";\n  ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_BINARY\"] = 4] = \"ScannerQRCode_CFG_BINARY\";\n  ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_NUM\"] = 5] = \"ScannerQRCode_CFG_NUM\";\n  ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_MIN_LEN\"] = 32] = \"ScannerQRCode_CFG_MIN_LEN\";\n  ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_MAX_LEN\"] = 33] = \"ScannerQRCode_CFG_MAX_LEN\";\n  ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_UNCERTAINTY\"] = 64] = \"ScannerQRCode_CFG_UNCERTAINTY\";\n  ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_POSITION\"] = 128] = \"ScannerQRCode_CFG_POSITION\";\n  ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_TEST_INVERTED\"] = 129] = \"ScannerQRCode_CFG_TEST_INVERTED\";\n  ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_X_DENSITY\"] = 256] = \"ScannerQRCode_CFG_X_DENSITY\";\n  ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_Y_DENSITY\"] = 257] = \"ScannerQRCode_CFG_Y_DENSITY\";\n})(ScannerQRCodeConfigType || (ScannerQRCodeConfigType = {}));\nvar ScannerQRCodeOrientation;\n(function (ScannerQRCodeOrientation) {\n  ScannerQRCodeOrientation[ScannerQRCodeOrientation[\"ScannerQRCode_ORIENT_UNKNOWN\"] = -1] = \"ScannerQRCode_ORIENT_UNKNOWN\";\n  ScannerQRCodeOrientation[ScannerQRCodeOrientation[\"ScannerQRCode_ORIENT_UP\"] = 0] = \"ScannerQRCode_ORIENT_UP\";\n  ScannerQRCodeOrientation[ScannerQRCodeOrientation[\"ScannerQRCode_ORIENT_RIGHT\"] = 1] = \"ScannerQRCode_ORIENT_RIGHT\";\n  ScannerQRCodeOrientation[ScannerQRCodeOrientation[\"ScannerQRCode_ORIENT_DOWN\"] = 2] = \"ScannerQRCode_ORIENT_DOWN\";\n  ScannerQRCodeOrientation[ScannerQRCodeOrientation[\"ScannerQRCode_ORIENT_LEFT\"] = 3] = \"ScannerQRCode_ORIENT_LEFT\";\n})(ScannerQRCodeOrientation || (ScannerQRCodeOrientation = {}));\nclass ScannerQRCodeTypePointer {\n  constructor(ptr, buf) {\n    this.ptr = ptr;\n    this.ptr32 = ptr >> 2;\n    this.buf = buf;\n    this.HEAP8 = new Int8Array(buf);\n    this.HEAPU32 = new Uint32Array(buf);\n    this.HEAP32 = new Int32Array(buf);\n  }\n}\nclass ScannerQRCodeSymbolPtr extends ScannerQRCodeTypePointer {\n  get type() {\n    return this.HEAPU32[this.ptr32];\n  }\n  get data() {\n    const len = this.HEAPU32[this.ptr32 + 4];\n    const ptr = this.HEAPU32[this.ptr32 + 5];\n    return Int8Array.from(this.HEAP8.subarray(ptr, ptr + len));\n  }\n  get points() {\n    const len = this.HEAPU32[this.ptr32 + 7];\n    const ptr = this.HEAPU32[this.ptr32 + 8];\n    const ptr32 = ptr >> 2;\n    const res = [];\n    for (let i = 0; i < len; ++i) {\n      const x = this.HEAP32[ptr32 + i * 2];\n      const y = this.HEAP32[ptr32 + i * 2 + 1];\n      res.push({\n        x,\n        y\n      });\n    }\n    return res;\n  }\n  get orientation() {\n    return this.HEAP32[this.ptr32 + 9];\n  }\n  get next() {\n    const ptr = this.HEAPU32[this.ptr32 + 11];\n    if (!ptr) return null;\n    return new ScannerQRCodeSymbolPtr(ptr, this.buf);\n  }\n  get time() {\n    return this.HEAPU32[this.ptr32 + 13];\n  }\n  get cacheCount() {\n    return this.HEAP32[this.ptr32 + 14];\n  }\n  get quality() {\n    return this.HEAP32[this.ptr32 + 15];\n  }\n}\nclass SymbolSetPtr extends ScannerQRCodeTypePointer {\n  get head() {\n    const ptr = this.HEAPU32[this.ptr32 + 2];\n    if (!ptr) return null;\n    return new ScannerQRCodeSymbolPtr(ptr, this.buf);\n  }\n}\nclass ScannerQRCodeResult {\n  constructor(ptr) {\n    this.value = '';\n    this.type = ptr.type;\n    this.typeName = ScannerQRCodeSymbolType[this.type];\n    this.data = ptr.data;\n    this.points = ptr.points;\n    this.orientation = ptr.orientation;\n    this.time = ptr.time;\n    this.cacheCount = ptr.cacheCount;\n    this.quality = ptr.quality;\n  }\n  static createSymbolsFromPtr(ptr, buf) {\n    if (ptr == 0) return [];\n    const set = new SymbolSetPtr(ptr, buf);\n    let symbol = set.head;\n    const res = [];\n    while (symbol !== null) {\n      res.push(new ScannerQRCodeResult(symbol));\n      symbol = symbol.next;\n    }\n    return res;\n  }\n  decode(encoding) {\n    const decoder = new TextDecoder(encoding);\n    return decoder.decode(this.data);\n  }\n}\nclass NgxScannerQrcodeModule {\n  static #_ = this.ɵfac = function NgxScannerQrcodeModule_Factory(t) {\n    return new (t || NgxScannerQrcodeModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgxScannerQrcodeModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [NgxScannerQrcodeService]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxScannerQrcodeModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgxScannerQrcodeComponent],\n      exports: [NgxScannerQrcodeComponent],\n      providers: [NgxScannerQrcodeService]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ngx-scanner-qrcode\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LOAD_WASM, NgxScannerQrcodeComponent, NgxScannerQrcodeModule, NgxScannerQrcodeService, ScannerQRCodeConfigType, ScannerQRCodeOrientation, ScannerQRCodeResult, ScannerQRCodeSymbolType };","map":{"version":3,"names":["i0","Injectable","EventEmitter","Component","ViewChild","ViewEncapsulation","NgModule","AsyncSubject","BehaviorSubject","_c0","_c1","_c2","WASMPROJECT","WASMREMOTE","WASMREMOTELATEST","BEEP","MEDIA_STREAM_DEFAULT","audio","video","CANVAS_STYLES_LAYER","lineWidth","strokeStyle","fillStyle","CANVAS_STYLES_TEXT","font","CONFIG_DEFAULT","src","fps","vibrate","decode","isBeep","constraints","canvasStyles","WASM_READY","window","OVERRIDES","variableKey","config","defaultConfig","Object","keys","length","key","cloneDeep","JSON","parse","stringify","hasOwnProperty","AS_COMPLETE","as","data","error","next","complete","PLAY_AUDIO","isPlay","Audio","oncanplaythrough","promise","play","catch","e","name","DRAW_RESULT_APPEND_CHILD","code","oriCanvas","elTarget","widthZoom","heightZoom","oriWidth","width","oriHeight","height","oriWHRatio","imgWidth","parseInt","getComputedStyle","imgHeight","imgWHRatio","innerHTML","i","_code","cvs","document","createElement","ctx","getContext","willReadFrequently","loc","X","Y","fontSize","svgSize","num","replace","test","parseFloat","Number","isNaN","points","j","xj","x","yj","y","push","maxX","Math","max","minX","min","maxY","minY","setAttribute","style","top","left","polygon","k","shape","slice","beginPath","moveTo","shift","lineTo","closePath","fill","stroke","qrcodeTooltipTemp","innerText","value","maxWidth","innerWidth","borderRadius","paddingBlock","paddingInline","xmlString","xmlDom","DOMParser","parseFromString","svgDom","ownerDocument","importNode","documentElement","marginLeft","appendChild","addEventListener","navigator","writeText","qrcodeTooltip","resultText","ff","split","fontFamily","color","DRAW_RESULT_ON_CANVAS","fs","styleLayer","cvs2","styleText","ctx2","FILL_TEXT_MULTI_LINE","drawImage","READ_AS_DATA_URL","file","configs","Promise","resolve","reject","fileReader","FileReader","onload","objectFile","url","URL","createObjectURL","image","Image","_asyncToGenerator","canvas","naturalWidth","naturalHeight","imageData","getImageData","zbarWasm","scanImageData","forEach","s","toLocaleLowerCase","blob","CANVAS_TO_BLOB","blobToFile","theBlob","fileName","File","lastModified","Date","getTime","type","assign","onerror","readAsDataURL","toBlob","BLOB_TO_FILE","FILES_TO_SCAN","files","percentage","quality","COMPRESS_IMAGE_FILE","then","_files","all","map","m","img","text","lineHeight","measureText","lines","fillText","strokeText","resizedFiles","reader","event","newWidth","round","newHeight","resizedFile","target","result","REMOVE_RESULT_PANEL","element","childNodes","el","removeChild","RESET_CANVAS","context","clearRect","UPDATE_WIDTH_HEIGHT_VIDEO","offsetWidth","offsetHeight","VIBRATE","time","IS_MOBILE","vendor","userAgent","phone","version","isSafari","substr","NgxScannerQrcodeService","loadFiles","loadFilesToScan","_","ɵfac","NgxScannerQrcodeService_Factory","t","_2","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","args","LOAD_WASM","renderer","retry","LOAD_WASM_RETRY","isLoadWasmRemote","DONE","timeoutId","L","clearTimeout","setTimeout","scriptRemote","querySelectorAll","scriptRemoteLatest","scriptProject","f","remove","script","head","mod","NgxScannerQrcodeComponent","constructor","elementRef","isStart","isPause","isLoading","isTorch","devices","deviceIndexActive","dataForResize","ready","STATUS","startON","pauseON","loadingON","startOFF","pauseOFF","loadingOFF","torchOFF","ngOnInit","overrideConfig","subscribe","loadImage","resize","start","playDeviceCustom","safariWebRTC","stop","rAF_ID","nativeElement","srcObject","getTracks","track","resultsPanel","requestAnimationFrame","pause","playDevice","deviceId","getConstraints","existDeviceId","findIndex","mediaDevices","getUserMedia","stream","onloadedmetadata","eventEmit","flag","torcher","applyConstraints","advanced","torch","deviceIndex","_this","undefined","videoTrack","getVideoTracks","imageCapture","ImageCapture","getPhotoCapabilities","download","now","_this2","res","item","link","href","click","loadAllDevices","enumerateDevices","cameraDevices","filter","kind","callback","_this3","HTMLImageElement","visibility","setStyle","HTMLVideoElement","videoWidth","videoHeight","freeze","EMIT_DATA","response","emit","delay","readyState","HAVE_ENOUGH_DATA","isReady","ngOnDestroy","NgxScannerQrcodeComponent_Factory","ɵɵdirectiveInject","Renderer2","ElementRef","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","NgxScannerQrcodeComponent_Query","rf","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","inputs","outputs","exportAs","decls","vars","consts","template","NgxScannerQrcodeComponent_Template","ɵɵelement","styles","encapsulation","selector","host","queries","None","ScannerQRCodeSymbolType","ScannerQRCodeConfigType","ScannerQRCodeOrientation","ScannerQRCodeTypePointer","ptr","buf","ptr32","HEAP8","Int8Array","HEAPU32","Uint32Array","HEAP32","Int32Array","ScannerQRCodeSymbolPtr","len","from","subarray","orientation","cacheCount","SymbolSetPtr","ScannerQRCodeResult","typeName","createSymbolsFromPtr","set","symbol","encoding","decoder","TextDecoder","NgxScannerQrcodeModule","NgxScannerQrcodeModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","providers","declarations","exports"],"sources":["C:/Users/ryana/OneDrive/Desktop/Personal Files/Freelance/attendance-monitoring-using-qr-code/node_modules/ngx-scanner-qrcode/fesm2022/ngx-scanner-qrcode.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ViewChild, ViewEncapsulation, NgModule } from '@angular/core';\nimport { AsyncSubject, BehaviorSubject } from 'rxjs';\n\nconst WASMPROJECT = \"assets/wasm/index.js\";\nconst WASMREMOTE = \"https://cdn.jsdelivr.net/npm/ngx-scanner-qrcode@1.6.9/wasm/index.js\";\nconst WASMREMOTELATEST = \"https://cdn.jsdelivr.net/npm/ngx-scanner-qrcode@latest/wasm/index.js\";\nconst BEEP = `data:audio/mpeg;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjI5LjEwMAAAAAAAAAAAAAAA/+M4wAAAAAAAAAAAAEluZm8AAAAPAAAABQAAAkAAgICAgICAgICAgICAgICAgICAgKCgoKCgoKCgoKCgoKCgoKCgoKCgwMDAwMDAwMDAwMDAwMDAwMDAwMDg4ODg4ODg4ODg4ODg4ODg4ODg4P//////////////////////////AAAAAExhdmM1OC41NAAAAAAAAAAAAAAAACQEUQAAAAAAAAJAk0uXRQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/+MYxAANQAbGeUEQAAHZYZ3fASqD4P5TKBgocg+Bw/8+CAYBA4XB9/4EBAEP4nB9+UOf/6gfUCAIKyjgQ/Kf//wfswAAAwQA/+MYxAYOqrbdkZGQAMA7DJLCsQxNOij///////////+tv///3RWiZGBEhsf/FO/+LoCSFs1dFVS/g8f/4Mhv0nhqAieHleLy/+MYxAYOOrbMAY2gABf/////////////////usPJ66R0wI4boY9/8jQYg//g2SPx1M0N3Z0kVJLIs///Uw4aMyvHJJYmPBYG/+MYxAgPMALBucAQAoGgaBoFQVBUFQWDv6gZBUFQVBUGgaBr5YSgqCoKhIGg7+IQVBUFQVBoGga//SsFSoKnf/iVTEFNRTMu/+MYxAYAAANIAAAAADEwMFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV`;\nconst MEDIA_STREAM_DEFAULT = {\n    audio: false,\n    video: true\n};\nconst CANVAS_STYLES_LAYER = {\n    lineWidth: 1,\n    strokeStyle: 'green',\n    fillStyle: '#55f02880'\n};\nconst CANVAS_STYLES_TEXT = {\n    font: '15px serif',\n    strokeStyle: '#fff0',\n    fillStyle: '#ff0000'\n};\nconst CONFIG_DEFAULT = {\n    src: '',\n    fps: 30,\n    vibrate: 300,\n    decode: 'utf-8',\n    isBeep: true,\n    constraints: MEDIA_STREAM_DEFAULT,\n    canvasStyles: [CANVAS_STYLES_LAYER, CANVAS_STYLES_TEXT]\n};\n\n/**\n * WASM_READY\n * @returns\n */\nvar WASM_READY = () => ('zbarWasm' in window);\n/**\n * OVERRIDES\n * @param variableKey\n * @param config\n * @param defaultConfig\n * @returns\n */\nconst OVERRIDES = (variableKey, config, defaultConfig) => {\n    if (config && Object.keys(config[variableKey]).length) {\n        for (const key in defaultConfig) {\n            const cloneDeep = JSON.parse(JSON.stringify({ ...config[variableKey], ...{ [key]: defaultConfig[key] } }));\n            config[variableKey] = config[variableKey].hasOwnProperty(key) ? config[variableKey] : cloneDeep;\n        }\n        return config[variableKey];\n    }\n    else {\n        return defaultConfig;\n    }\n};\n/**\n * AS_COMPLETE\n * @param as\n * @param data\n * @param error\n */\nconst AS_COMPLETE = (as, data, error) => {\n    error ? as.error(error) : as.next(data);\n    as.complete();\n};\n/**\n * PLAY_AUDIO\n * @param isPlay\n * @returns\n */\nconst PLAY_AUDIO = (isPlay = false) => {\n    if (isPlay === false)\n        return;\n    const audio = new Audio(BEEP);\n    // when the sound has been loaded, execute your code\n    audio.oncanplaythrough = () => {\n        const promise = audio.play();\n        if (promise) {\n            promise.catch((e) => {\n                if (e.name === \"NotAllowedError\" || e.name === \"NotSupportedError\") {\n                    // console.log(e.name);\n                }\n            });\n        }\n    };\n};\n/**\n * DRAW_RESULT_APPEND_CHILD\n * @param code\n * @param oriCanvas\n * @param elTarget\n * @param canvasStyles\n */\nconst DRAW_RESULT_APPEND_CHILD = (code, oriCanvas, elTarget, canvasStyles) => {\n    let widthZoom;\n    let heightZoom;\n    let oriWidth = oriCanvas.width;\n    let oriHeight = oriCanvas.height;\n    let oriWHRatio = oriWidth / oriHeight;\n    let imgWidth = parseInt(getComputedStyle(oriCanvas).width);\n    let imgHeight = parseInt(getComputedStyle(oriCanvas).height);\n    let imgWHRatio = imgWidth / imgHeight;\n    elTarget.innerHTML = '';\n    if (oriWHRatio > imgWHRatio) {\n        widthZoom = imgWidth / oriWidth;\n        heightZoom = imgWidth / oriWHRatio / oriHeight;\n    }\n    else {\n        heightZoom = imgHeight / oriHeight;\n        widthZoom = (imgHeight * oriWHRatio) / oriWidth;\n    }\n    for (let i = 0; i < code.length; i++) {\n        const _code = code[i];\n        // New canvas\n        let cvs = document.createElement(\"canvas\");\n        let ctx = cvs.getContext('2d', { willReadFrequently: true });\n        let loc = {};\n        let X = [];\n        let Y = [];\n        let fontSize = 0;\n        let svgSize = 0;\n        let num = canvasStyles.length === 2 && canvasStyles[1]?.font?.replace(/[^0-9]/g, '');\n        if (num && /[0-9]/g.test(num)) {\n            fontSize = parseFloat(num);\n            svgSize = (widthZoom || 1) * fontSize;\n            if (Number.isNaN(svgSize)) {\n                svgSize = fontSize;\n            }\n        }\n        // Point x,y\n        const points = _code.points;\n        for (let j = 0; j < points.length; j++) {\n            const xj = points?.[j]?.x ?? 0;\n            const yj = points?.[j]?.y ?? 0;\n            loc[`x${j + 1}`] = xj;\n            loc[`y${j + 1}`] = yj;\n            X.push(xj);\n            Y.push(yj);\n        }\n        // Min max\n        let maxX = Math.max(...X);\n        let minX = Math.min(...X);\n        let maxY = Math.max(...Y);\n        let minY = Math.min(...Y);\n        // Add class\n        cvs.setAttribute('class', 'qrcode-polygon');\n        // Size with screen zoom\n        if (oriWHRatio > imgWHRatio) {\n            cvs.style.top = minY * heightZoom + (imgHeight - imgWidth / oriWHRatio) * 0.5 + \"px\";\n            cvs.style.left = minX * widthZoom + \"px\";\n            cvs.width = (maxX - minX) * widthZoom;\n            cvs.height = (maxY - minY) * widthZoom;\n        }\n        else {\n            cvs.style.top = minY * heightZoom + \"px\";\n            cvs.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\n            cvs.width = (maxX - minX) * heightZoom;\n            cvs.height = (maxY - minY) * heightZoom;\n        }\n        // Style for canvas\n        for (const key in canvasStyles[0]) {\n            ctx[key] = canvasStyles[0][key];\n        }\n        // polygon [x,y, x,y, x,y.....];\n        const polygon = [];\n        for (let k = 0; k < X.length; k++) {\n            polygon.push((loc[`x${k + 1}`] - minX) * heightZoom);\n            polygon.push((loc[`y${k + 1}`] - minY) * widthZoom);\n        }\n        // Copy array\n        const shape = polygon.slice(0);\n        // Draw polygon\n        ctx.beginPath();\n        ctx.moveTo(shape.shift(), shape.shift());\n        while (shape.length) {\n            ctx.lineTo(shape.shift(), shape.shift()); //x,y\n        }\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n        if (fontSize) {\n            // Tooltip result\n            const qrcodeTooltipTemp = document.createElement('div');\n            qrcodeTooltipTemp.setAttribute('class', 'qrcode-tooltip-temp');\n            qrcodeTooltipTemp.innerText = _code.value;\n            qrcodeTooltipTemp.style.maxWidth = ((oriWidth > window.innerWidth) ? window.innerWidth * 0.9 : oriWidth) + \"px\";\n            qrcodeTooltipTemp.style.borderRadius = `clamp(1px, ${(widthZoom * fontSize) - 10}px, 3px)`;\n            qrcodeTooltipTemp.style.paddingBlock = `clamp(1px, ${(widthZoom * fontSize) - 10}px, 3px)`; // top - bottom\n            qrcodeTooltipTemp.style.paddingInline = `clamp(2.5px, ${(widthZoom * fontSize) - 6}px, 10px)`; // left - right\n            const xmlString = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${svgSize}\" height=\"${svgSize}\" viewBox=\"0 0 512 512\"><rect x=\"128\" y=\"128\" width=\"336\" height=\"336\" rx=\"57\" ry=\"57\"></rect><path d=\"M383.5,128l.5-24a56.16,56.16,0,0,0-56-56H112a64.19,64.19,0,0,0-64,64V328a56.16,56.16,0,0,0,56,56h24\"></path></svg>`;\n            const xmlDom = new DOMParser().parseFromString(xmlString, 'application/xml');\n            const svgDom = qrcodeTooltipTemp.ownerDocument.importNode(xmlDom.documentElement, true);\n            svgDom.style.marginLeft = `clamp(1px, ${(widthZoom * fontSize) - 10}px, 3px)`; // left - right\n            qrcodeTooltipTemp.appendChild(svgDom);\n            svgDom.addEventListener(\"click\", () => window.navigator['clipboard'].writeText(_code.value));\n            qrcodeTooltipTemp.addEventListener(\"click\", () => window.navigator['clipboard'].writeText(_code.value));\n            // Tooltip box\n            const qrcodeTooltip = document.createElement('div');\n            qrcodeTooltip.setAttribute('class', 'qrcode-tooltip');\n            qrcodeTooltip.appendChild(qrcodeTooltipTemp);\n            heightZoom = imgHeight / oriHeight;\n            widthZoom = (imgHeight * oriWHRatio) / oriWidth;\n            qrcodeTooltip.style.fontSize = widthZoom * fontSize + 'px';\n            qrcodeTooltip.style.top = minY * heightZoom + \"px\";\n            qrcodeTooltip.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\n            qrcodeTooltip.style.width = (maxX - minX) * heightZoom + \"px\";\n            qrcodeTooltip.style.height = (maxY - minY) * heightZoom + \"px\";\n            // Result text\n            const resultText = document.createElement('span');\n            resultText.innerText = _code.value;\n            // Set position result text\n            resultText.style.top = minY * heightZoom + (-20 * heightZoom) + \"px\";\n            resultText.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\n            // Style text\n            const ff = canvasStyles[1]?.font?.split(' ')?.[1];\n            resultText.style.fontFamily = ff;\n            resultText.style.fontSize = widthZoom * fontSize + 'px';\n            resultText.style.color = canvasStyles?.[1]?.fillStyle;\n            elTarget?.appendChild(qrcodeTooltip);\n            elTarget?.appendChild(resultText);\n        }\n        elTarget?.appendChild(cvs);\n    }\n    ;\n};\n/**\n * DRAW_RESULT_ON_CANVAS\n * @param code\n * @param cvs\n * @param canvasStyles\n */\nconst DRAW_RESULT_ON_CANVAS = (code, cvs, canvasStyles) => {\n    let ctx = cvs.getContext('2d', { willReadFrequently: true });\n    for (let i = 0; i < code.length; i++) {\n        const _code = code[i];\n        let loc = {};\n        let X = [];\n        let Y = [];\n        let fontSize = 0;\n        const fs = canvasStyles[1]?.font?.split(' ')?.[0];\n        let num = fs?.replace(/[^0-9]/g, '');\n        if (num && /[0-9]/g.test(num)) {\n            fontSize = parseFloat(num);\n        }\n        // Point x,y\n        const points = _code.points;\n        for (let j = 0; j < points.length; j++) {\n            const xj = points?.[j]?.x ?? 0;\n            const yj = points?.[j]?.y ?? 0;\n            loc[`x${j + 1}`] = xj;\n            loc[`y${j + 1}`] = yj;\n            X.push(xj);\n            Y.push(yj);\n        }\n        // Min max\n        let minX = Math.min(...X);\n        let minY = Math.min(...Y);\n        const styleLayer = () => {\n            for (const key in canvasStyles[0]) {\n                ctx[key] = canvasStyles[0][key];\n            }\n            // polygon [x,y, x,y, x,y.....];\n            const polygon = [];\n            for (let k = 0; k < X.length; k++) {\n                polygon.push(loc[`x${k + 1}`]);\n                polygon.push(loc[`y${k + 1}`]);\n            }\n            // Copy array\n            const shape = polygon.slice(0);\n            // Draw polygon\n            ctx.beginPath();\n            ctx.moveTo(shape.shift(), shape.shift());\n            while (shape.length) {\n                ctx.lineTo(shape.shift(), shape.shift()); //x,y\n            }\n            ctx.closePath();\n            ctx.fill();\n            ctx.stroke();\n        };\n        let cvs2 = document.createElement('canvas');\n        const styleText = () => {\n            const ff = canvasStyles[1]?.font?.split(' ')?.[1];\n            cvs2.height = cvs.height;\n            cvs2.width = cvs.width;\n            let ctx2 = cvs2.getContext('2d', { willReadFrequently: true });\n            ctx2.font = fontSize + `px ` + ff;\n            for (const key in canvasStyles[1]) {\n                ctx2[key] = canvasStyles[1][key];\n            }\n            FILL_TEXT_MULTI_LINE(ctx2, _code.value, minX, minY - 5);\n        };\n        styleLayer();\n        styleText();\n        // Merge cvs2 into cvs\n        ctx.drawImage(cvs2, 0, 0);\n    }\n    ;\n};\n/**\n * READ_AS_DATA_URL\n * @param file\n * @param configs\n * @returns\n */\nconst READ_AS_DATA_URL = (file, configs) => {\n    /** overrides **/\n    let decode = configs?.decode ?? CONFIG_DEFAULT.decode;\n    let canvasStyles = configs?.canvasStyles?.length === 2 ? configs?.canvasStyles : [CANVAS_STYLES_LAYER, CANVAS_STYLES_TEXT];\n    let isBeep = configs?.isBeep ?? CONFIG_DEFAULT.isBeep;\n    /** drawImage **/\n    return new Promise((resolve, reject) => {\n        const fileReader = new FileReader();\n        fileReader.onload = () => {\n            const objectFile = {\n                name: file.name,\n                file: file,\n                url: URL.createObjectURL(file)\n            };\n            // Set the src of this Image object.\n            const image = new Image();\n            // Setting cross origin value to anonymous\n            image.setAttribute('crossOrigin', 'anonymous');\n            // When our image has loaded.\n            image.onload = async () => {\n                // Get the canvas element by using the getElementById method.\n                const canvas = document.createElement('canvas');\n                // HTMLImageElement size\n                canvas.width = image.naturalWidth || image.width;\n                canvas.height = image.naturalHeight || image.height;\n                // Get a 2D drawing context for the canvas.\n                const ctx = canvas.getContext('2d');\n                // Draw image\n                ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n                // Data image\n                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n                // Scanner\n                if (WASM_READY()) {\n                    const code = await zbarWasm.scanImageData(imageData);\n                    if (code?.length) {\n                        // Decode\n                        code.forEach((s) => s.value = s.decode(decode?.toLocaleLowerCase()));\n                        // Overlay\n                        DRAW_RESULT_ON_CANVAS(code, canvas, canvasStyles);\n                        // Emit object\n                        const blob = await CANVAS_TO_BLOB(canvas);\n                        const url = URL.createObjectURL(blob);\n                        const blobToFile = (theBlob, fileName) => new File([theBlob], fileName, { lastModified: new Date().getTime(), type: theBlob.type });\n                        resolve(Object.assign({}, objectFile, { data: code, url: url, canvas: canvas, file: blobToFile(blob, objectFile.name) }));\n                        PLAY_AUDIO(isBeep);\n                    }\n                    else {\n                        resolve(Object.assign({}, objectFile, { data: code, canvas: canvas }));\n                    }\n                }\n            };\n            // Set src\n            image.src = objectFile.url;\n        };\n        fileReader.onerror = (error) => reject(error);\n        fileReader.readAsDataURL(file);\n    });\n};\n/**\n * Convert canvas to blob\n * canvas.toBlob((blob) => { .. }, 'image/jpeg', 0.95); // JPEG at 95% quality\n * @param canvas\n * @param type\n * @returns\n */\nconst CANVAS_TO_BLOB = (canvas, type) => {\n    return new Promise((resolve, reject) => canvas.toBlob(blob => resolve(blob), type));\n};\n/**\n * Convert blob to file\n * @param theBlob\n * @param fileName\n * @returns\n */\nconst BLOB_TO_FILE = (theBlob, fileName) => {\n    return new File([theBlob], fileName, { lastModified: new Date().getTime(), type: theBlob.type });\n};\n/**\n * FILES_TO_SCAN\n * @param files\n * @param configs\n * @param percentage\n * @param quality\n * @param as\n * @returns\n */\nconst FILES_TO_SCAN = (files = [], configs, percentage, quality, as = new AsyncSubject()) => {\n    COMPRESS_IMAGE_FILE(files, percentage, quality).then((_files) => {\n        Promise.all(Object.assign([], _files).map((m) => READ_AS_DATA_URL(m, configs))).then((img) => {\n            AS_COMPLETE(as, img);\n        }).catch((error) => AS_COMPLETE(as, null, error));\n    });\n    return as;\n};\n/**\n * FILL_TEXT_MULTI_LINE\n * @param ctx\n * @param text\n * @param x\n * @param y\n */\nconst FILL_TEXT_MULTI_LINE = (ctx, text, x, y) => {\n    let lineHeight = ctx.measureText(\"M\").width * 1.2;\n    let lines = text.split(\"\\n\");\n    for (var i = 0; i < lines.length; ++i) {\n        ctx.fillText(lines[i], x, y);\n        ctx.strokeText(lines[i], x, y);\n        y += lineHeight;\n    }\n};\n/**\n * COMPRESS_IMAGE_FILE\n * @param files\n * @param percentage\n * @param quality\n * @returns\n */\nconst COMPRESS_IMAGE_FILE = (files = [], percentage = 100, quality = 100) => {\n    if (files.length && (percentage < 100 || quality < 100)) {\n        // Have files\n        const resizedFiles = [];\n        return new Promise((resolve, reject) => {\n            for (const file of files) {\n                const image = new Image();\n                const reader = new FileReader();\n                reader.onload = function (event) {\n                    image.onload = function () {\n                        const canvas = document.createElement('canvas');\n                        const ctx = canvas.getContext('2d');\n                        const newWidth = Math.round(image.width * (percentage / 100));\n                        const newHeight = Math.round(image.height * (percentage / 100));\n                        canvas.width = newWidth;\n                        canvas.height = newHeight;\n                        ctx.drawImage(image, 0, 0, newWidth, newHeight);\n                        canvas.toBlob((blob) => {\n                            const resizedFile = new File([blob], file.name, { type: file.type });\n                            resizedFiles.push(resizedFile);\n                            if (files.length === resizedFiles.length) {\n                                resolve(resizedFiles);\n                            }\n                        }, file.type, quality / 100);\n                    };\n                    image.src = event.target.result;\n                };\n                reader.onerror = (error) => reject(error);\n                reader.readAsDataURL(file);\n            }\n        });\n    }\n    else {\n        // No files selected\n        return Promise.resolve(files);\n    }\n};\n/**\n * REMOVE_RESULT_PANEL\n * @param element\n */\nconst REMOVE_RESULT_PANEL = (element) => {\n    // clear text result and tooltip\n    Object.assign([], element.childNodes).forEach(el => element.removeChild(el));\n};\n/**\n * RESET_CANVAS\n * @param canvas\n */\nconst RESET_CANVAS = (canvas) => {\n    // reset canvas\n    const context = canvas.getContext('2d', { willReadFrequently: true });\n    // clear frame when reloop\n    context.clearRect(0, 0, canvas.width, canvas.height);\n};\n/**\n * UPDATE_WIDTH_HEIGHT_VIDEO\n * @param video\n * @param canvas\n */\nconst UPDATE_WIDTH_HEIGHT_VIDEO = (video, canvas) => {\n    video.style.width = canvas.offsetWidth + 'px';\n    video.style.height = canvas.offsetHeight + 'px';\n};\n/**\n * VIBRATE\n * @param time\n */\nconst VIBRATE = (time = 300) => {\n    time && IS_MOBILE() && window?.navigator?.vibrate(time);\n};\n/**\n * IS_MOBILE\n * @returns\n */\nconst IS_MOBILE = () => {\n    const vendor = navigator.userAgent || navigator['vendor'] || window['opera'];\n    const phone = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\n    const version = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i;\n    const isSafari = /^((?!chrome|android).)*safari/i;\n    return !!(phone.test(vendor) || version.test(vendor.substr(0, 4))) && !isSafari.test(vendor);\n};\n\nclass NgxScannerQrcodeService {\n    /**\n     * loadFiles\n     * @param files\n     * @param percentage\n     * @param quality\n     * @returns\n     */\n    loadFiles(files = [], percentage, quality) {\n        const as = new AsyncSubject();\n        COMPRESS_IMAGE_FILE(files, percentage, quality).then((_files) => {\n            Promise.all(Object.assign([], _files).map((m) => this.readAsDataURL(m))).then((img) => AS_COMPLETE(as, img)).catch((error) => AS_COMPLETE(as, null, error));\n        });\n        return as;\n    }\n    /**\n     * loadFilesToScan\n     * @param files\n     * @param config\n     * @param percentage\n     * @param quality\n     * @returns\n     */\n    loadFilesToScan(files = [], config, percentage, quality) {\n        return FILES_TO_SCAN(files, config, percentage, quality);\n    }\n    /**\n     * readAsDataURL\n     * @param file\n     * @returns\n     */\n    readAsDataURL(file) {\n        /** drawImage **/\n        return new Promise((resolve, reject) => {\n            const fileReader = new FileReader();\n            fileReader.onload = () => {\n                const objectFile = {\n                    name: file.name,\n                    file: file,\n                    url: URL.createObjectURL(file)\n                };\n                resolve(objectFile);\n            };\n            fileReader.onerror = (error) => reject(error);\n            fileReader.readAsDataURL(file);\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NgxScannerQrcodeService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NgxScannerQrcodeService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NgxScannerQrcodeService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\n/**\n * LOAD_WASM\n * @param as\n * @param renderer\n * @returns\n */\nconst LOAD_WASM = (as = new AsyncSubject(), renderer) => {\n    let retry = 0;\n    const LOAD_WASM_RETRY = (isLoadWasmRemote = false) => {\n        const DONE = () => {\n            let timeoutId;\n            try {\n                const L = () => {\n                    clearTimeout(timeoutId);\n                    WASM_READY() ? setTimeout(() => AS_COMPLETE(as, true)) : timeoutId = setTimeout(() => L());\n                };\n                setTimeout(() => L());\n                setTimeout(() => clearTimeout(timeoutId), 3000);\n            }\n            catch (error) {\n                clearTimeout(timeoutId);\n            }\n        };\n        const scriptRemote = document.querySelectorAll(`script[src=\"${WASMREMOTE}\"]`);\n        const scriptRemoteLatest = document.querySelectorAll(`script[src=\"${WASMREMOTELATEST}\"]`);\n        if (scriptRemote.length || scriptRemoteLatest.length) {\n            DONE();\n        }\n        else {\n            const scriptProject = document.querySelectorAll(`script[src=\"${WASMPROJECT}\"]`);\n            if (scriptProject.length === 1) {\n                DONE();\n            }\n            else {\n                scriptProject.forEach(f => f.remove());\n                if (renderer) {\n                    const script = renderer.createElement(\"script\");\n                    renderer.setAttribute(script, \"src\", isLoadWasmRemote ? WASMREMOTE : WASMPROJECT);\n                    renderer.setAttribute(script, \"type\", \"text/javascript\");\n                    renderer.setAttribute(script, \"async\", \"\");\n                    renderer.appendChild(document.head, script);\n                    script.onload = () => DONE();\n                    script.onerror = () => {\n                        if (retry < 2) {\n                            document.head.removeChild(script);\n                            LOAD_WASM_RETRY(true);\n                        }\n                        else {\n                            AS_COMPLETE(as, false, 'Could not load script ' + isLoadWasmRemote ? WASMREMOTE : WASMPROJECT);\n                        }\n                    };\n                    retry += 1;\n                }\n                else {\n                    const mod = document.createElement('script');\n                    mod.setAttribute(\"src\", isLoadWasmRemote ? WASMREMOTE : WASMPROJECT);\n                    mod.setAttribute(\"type\", \"text/javascript\");\n                    mod.setAttribute(\"async\", \"\");\n                    document.head.appendChild(mod);\n                    mod.onload = () => DONE();\n                    mod.onerror = () => {\n                        if (retry < 2) {\n                            document.head.removeChild(mod);\n                            LOAD_WASM_RETRY(true);\n                        }\n                        else {\n                            AS_COMPLETE(as, false, 'Could not load script ' + isLoadWasmRemote ? WASMREMOTE : WASMPROJECT);\n                        }\n                    };\n                    retry += 1;\n                }\n            }\n        }\n    };\n    LOAD_WASM_RETRY();\n    return as;\n};\n\nclass NgxScannerQrcodeComponent {\n    constructor(renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        /**\n         * EventEmitter\n         */\n        this.event = new EventEmitter();\n        /**\n         * Input\n         */\n        this.src = CONFIG_DEFAULT.src;\n        this.fps = CONFIG_DEFAULT.fps;\n        this.vibrate = CONFIG_DEFAULT.vibrate;\n        this.decode = CONFIG_DEFAULT.decode;\n        this.isBeep = CONFIG_DEFAULT.isBeep;\n        this.config = CONFIG_DEFAULT;\n        this.constraints = CONFIG_DEFAULT.constraints;\n        this.canvasStyles = [CANVAS_STYLES_LAYER, CANVAS_STYLES_TEXT];\n        /**\n         * Export\n        */\n        this.isStart = false;\n        this.isPause = false;\n        this.isLoading = false;\n        this.isTorch = false;\n        this.data = new BehaviorSubject([]);\n        this.devices = new BehaviorSubject([]);\n        this.deviceIndexActive = 0;\n        this.dataForResize = [];\n        this.ready = new AsyncSubject();\n        this.STATUS = {\n            startON: () => this.isStart = true,\n            pauseON: () => this.isPause = true,\n            loadingON: () => this.isLoading = true,\n            startOFF: () => this.isStart = false,\n            pauseOFF: () => this.isPause = false,\n            loadingOFF: () => this.isLoading = false,\n            torchOFF: () => this.isTorch = false,\n        };\n    }\n    ngOnInit() {\n        this.overrideConfig();\n        LOAD_WASM(this.ready, this.renderer).subscribe(() => {\n            if (this.src) {\n                this.loadImage(this.src);\n            }\n            this.resize();\n        });\n    }\n    /**\n     * start\n     * @param playDeviceCustom\n     * @returns\n     */\n    start(playDeviceCustom) {\n        const as = new AsyncSubject();\n        if (this.isStart) {\n            // Reject\n            AS_COMPLETE(as, false);\n        }\n        else {\n            // fix safari\n            this.safariWebRTC(as, playDeviceCustom);\n        }\n        return as;\n    }\n    /**\n     * stop\n     * @returns\n     */\n    stop() {\n        this.STATUS.pauseOFF();\n        this.STATUS.startOFF();\n        this.STATUS.torchOFF();\n        this.STATUS.loadingOFF();\n        const as = new AsyncSubject();\n        try {\n            clearTimeout(this.rAF_ID);\n            this.video.nativeElement.srcObject.getTracks().forEach((track) => {\n                track.stop();\n                AS_COMPLETE(as, true);\n            });\n            this.dataForResize = [];\n            RESET_CANVAS(this.canvas.nativeElement);\n            REMOVE_RESULT_PANEL(this.resultsPanel.nativeElement);\n        }\n        catch (error) {\n            AS_COMPLETE(as, false, error);\n        }\n        return as;\n    }\n    /**\n     * play\n     * @returns\n     */\n    play() {\n        const as = new AsyncSubject();\n        if (this.isPause) {\n            this.video.nativeElement.play();\n            this.STATUS.pauseOFF();\n            this.requestAnimationFrame();\n            AS_COMPLETE(as, true);\n        }\n        else {\n            AS_COMPLETE(as, false);\n        }\n        return as;\n    }\n    /**\n     * pause\n     * @returns\n     */\n    pause() {\n        const as = new AsyncSubject();\n        if (this.isStart) {\n            clearTimeout(this.rAF_ID);\n            this.video.nativeElement.pause();\n            this.STATUS.pauseON();\n            AS_COMPLETE(as, true);\n        }\n        else {\n            AS_COMPLETE(as, false);\n        }\n        return as;\n    }\n    /**\n     * playDevice\n     * @param deviceId\n     * @param as\n     * @returns\n     */\n    playDevice(deviceId, as = new AsyncSubject()) {\n        const constraints = this.getConstraints();\n        const existDeviceId = (this.isStart && constraints) ? constraints.deviceId !== deviceId : true;\n        switch (true) {\n            case deviceId === 'null' || deviceId === 'undefined' || !deviceId:\n                stop();\n                this.stop();\n                AS_COMPLETE(as, false);\n                break;\n            case deviceId && existDeviceId:\n                stop();\n                this.stop();\n                // Loading on\n                this.STATUS.loadingON();\n                this.deviceIndexActive = this.devices.value.findIndex((f) => f.deviceId === deviceId);\n                const constraints = { ...this.constraints, audio: false, video: { deviceId: deviceId, ...this.constraints.video } };\n                // MediaStream\n                navigator.mediaDevices.getUserMedia(constraints).then((stream) => {\n                    this.video.nativeElement.srcObject = stream;\n                    this.video.nativeElement.onloadedmetadata = () => {\n                        this.video.nativeElement.play();\n                        this.requestAnimationFrame();\n                        AS_COMPLETE(as, true);\n                        this.STATUS.startON();\n                        this.STATUS.loadingOFF();\n                    };\n                }).catch((error) => {\n                    this.eventEmit(false);\n                    AS_COMPLETE(as, false, error);\n                    this.STATUS.startOFF();\n                    this.STATUS.loadingOFF();\n                });\n                break;\n            default:\n                AS_COMPLETE(as, false);\n                this.STATUS.loadingOFF();\n                break;\n        }\n        return as;\n    }\n    /**\n     * loadImage\n     * @param src\n     * @returns\n     */\n    loadImage(src) {\n        const as = new AsyncSubject();\n        // Loading on\n        this.STATUS.startOFF();\n        this.STATUS.loadingON();\n        // Set the src of this Image object.\n        const image = new Image();\n        // Setting cross origin value to anonymous\n        image.setAttribute('crossOrigin', 'anonymous');\n        // When our image has loaded.\n        image.onload = () => {\n            WASM_READY() && this.drawImage(image, (flag) => {\n                AS_COMPLETE(as, flag);\n                this.STATUS.startOFF();\n                this.STATUS.loadingOFF();\n            });\n        };\n        // Set src\n        image.src = src;\n        return as;\n    }\n    /**\n     * torcher\n     * @returns\n     */\n    torcher() {\n        const as = this.applyConstraints({ advanced: [{ torch: this.isTorch }] });\n        as.subscribe(() => false, () => this.isTorch = !this.isTorch);\n        return as;\n    }\n    /**\n     * applyConstraints\n     * @param constraints\n     * @param deviceIndex\n     * @returns\n     */\n    applyConstraints(constraints, deviceIndex = 0) {\n        const as = new AsyncSubject();\n        if (this.isStart) {\n            const stream = this.video.nativeElement.srcObject;\n            if (deviceIndex !== null || deviceIndex !== undefined || !Number.isNaN(deviceIndex)) {\n                const videoTrack = stream.getVideoTracks()[deviceIndex];\n                const imageCapture = new window.ImageCapture(videoTrack);\n                imageCapture.getPhotoCapabilities().then(async () => {\n                    await videoTrack.applyConstraints(constraints);\n                    UPDATE_WIDTH_HEIGHT_VIDEO(this.video.nativeElement, this.canvas.nativeElement);\n                    AS_COMPLETE(as, true);\n                }).catch((error) => {\n                    switch (error?.name) {\n                        case 'NotFoundError':\n                        case 'DevicesNotFoundError':\n                            AS_COMPLETE(as, false, 'Required track is missing');\n                            break;\n                        case 'NotReadableError':\n                        case 'TrackStartError':\n                            AS_COMPLETE(as, false, 'Webcam or mic are already in use');\n                            break;\n                        case 'OverconstrainedError':\n                        case 'ConstraintNotSatisfiedError':\n                            AS_COMPLETE(as, false, 'Constraints can not be satisfied by avb. devices');\n                            break;\n                        case 'NotAllowedError':\n                        case 'PermissionDeniedError':\n                            AS_COMPLETE(as, false, 'Permission denied in browser');\n                            break;\n                        case 'TypeError':\n                            AS_COMPLETE(as, false, 'Empty constraints object');\n                            break;\n                        default:\n                            AS_COMPLETE(as, false, error);\n                            break;\n                    }\n                });\n            }\n            else {\n                AS_COMPLETE(as, false, 'Please check again deviceIndex');\n            }\n        }\n        else {\n            AS_COMPLETE(as, false, 'Please start the scanner');\n        }\n        return as;\n    }\n    ;\n    /**\n     * getConstraints\n     * @param deviceIndex\n     * @returns\n     */\n    getConstraints(deviceIndex = 0) {\n        const stream = this.video.nativeElement.srcObject;\n        const videoTrack = stream?.getVideoTracks()[deviceIndex];\n        return videoTrack?.getConstraints();\n    }\n    /**\n     * download\n     * @param fileName\n     * @param percentage\n     * @param quality\n     * @returns\n     */\n    download(fileName = `ngx_scanner_qrcode_${Date.now()}.png`, percentage, quality) {\n        const as = new AsyncSubject();\n        (async () => {\n            const blob = await CANVAS_TO_BLOB(this.canvas.nativeElement);\n            const file = BLOB_TO_FILE(blob, fileName);\n            FILES_TO_SCAN([file], this.config, percentage, quality, as).subscribe((res) => {\n                res.forEach((item) => {\n                    if (item?.data?.length) {\n                        const link = document.createElement('a');\n                        link.href = item.url;\n                        link.download = item.name;\n                        link.click();\n                        link.remove();\n                    }\n                });\n            });\n        })();\n        return as;\n    }\n    /**\n     * resize\n     */\n    resize() {\n        window.addEventListener(\"resize\", () => {\n            DRAW_RESULT_APPEND_CHILD(this.dataForResize, this.canvas.nativeElement, this.resultsPanel.nativeElement, this.canvasStyles);\n            UPDATE_WIDTH_HEIGHT_VIDEO(this.video.nativeElement, this.canvas.nativeElement);\n        });\n    }\n    /**\n     * overrideConfig\n     */\n    overrideConfig() {\n        if ('src' in this.config)\n            this.src = this.config.src;\n        if ('fps' in this.config)\n            this.fps = this.config.fps;\n        if ('vibrate' in this.config)\n            this.vibrate = this.config.vibrate;\n        if ('decode' in this.config)\n            this.decode = this.config.decode;\n        if ('isBeep' in this.config)\n            this.isBeep = this.config.isBeep;\n        if ('constraints' in this.config)\n            this.constraints = OVERRIDES('constraints', this.config, MEDIA_STREAM_DEFAULT);\n        if ('canvasStyles' in this.config && this.config?.canvasStyles?.length === 2)\n            this.canvasStyles = this.config.canvasStyles;\n    }\n    /**\n     * safariWebRTC\n     * Fix issue on safari\n     * https://webrtchacks.com/guide-to-safari-webrtc\n     * @param as\n     * @param playDeviceCustom\n     */\n    safariWebRTC(as, playDeviceCustom) {\n        // Loading on\n        this.STATUS.startOFF();\n        this.STATUS.loadingON();\n        navigator.mediaDevices.getUserMedia(this.constraints).then((stream) => {\n            stream.getTracks().forEach(track => track.stop());\n            this.loadAllDevices(as, playDeviceCustom);\n        }).catch((error) => {\n            AS_COMPLETE(as, false, error);\n            this.STATUS.startOFF();\n            this.STATUS.loadingOFF();\n        });\n    }\n    /**\n     * loadAllDevices\n     * @param as\n     * @param playDeviceCustom\n     */\n    loadAllDevices(as, playDeviceCustom) {\n        navigator.mediaDevices.enumerateDevices().then(devices => {\n            let cameraDevices = devices.filter(f => f.kind == 'videoinput');\n            this.devices.next(cameraDevices);\n            if (cameraDevices?.length > 0) {\n                AS_COMPLETE(as, cameraDevices);\n                playDeviceCustom ? playDeviceCustom(cameraDevices) : this.playDevice(cameraDevices[0].deviceId);\n            }\n            else {\n                AS_COMPLETE(as, false, 'No camera detected.');\n                this.STATUS.startOFF();\n                this.STATUS.loadingOFF();\n            }\n        }).catch((error) => {\n            AS_COMPLETE(as, false, error);\n            this.STATUS.startOFF();\n            this.STATUS.loadingOFF();\n        });\n    }\n    /**\n     * drawImage\n     * @param element\n     * @param callback\n     */\n    async drawImage(element, callback = () => { }) {\n        // Get the canvas element by using the getElementById method.\n        const canvas = this.canvas.nativeElement;\n        // Get a 2D drawing context for the canvas.\n        const ctx = canvas.getContext('2d', { willReadFrequently: true });\n        // HTMLImageElement size\n        if (element instanceof HTMLImageElement) {\n            canvas.width = element.naturalWidth;\n            canvas.height = element.naturalHeight;\n            element.style.visibility = '';\n            this.video.nativeElement.style.visibility = 'hidden';\n            // Image center and auto scale\n            this.renderer.setStyle(this.elementRef.nativeElement, 'width', canvas.width + 'px');\n            this.renderer.setStyle(this.elementRef.nativeElement, 'maxWidth', 100 + '%');\n            this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'inline-block');\n        }\n        // HTMLVideoElement size\n        if (element instanceof HTMLVideoElement) {\n            canvas.width = element.videoWidth;\n            canvas.height = element.videoHeight;\n            element.style.visibility = '';\n            this.canvas.nativeElement.style.visibility = 'hidden';\n        }\n        // Set width, height for video element\n        UPDATE_WIDTH_HEIGHT_VIDEO(this.video.nativeElement, canvas);\n        // clear frame\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        // Draw image\n        ctx.drawImage(element, 0, 0, canvas.width, canvas.height);\n        // Data image\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        // Draw frame\n        const code = await zbarWasm.scanImageData(imageData);\n        if (code?.length) {\n            // Decode\n            code.forEach((s) => s.value = s.decode(this.decode?.toLocaleLowerCase()));\n            // Overlay\n            DRAW_RESULT_APPEND_CHILD(code, Object.freeze(this.canvas.nativeElement), this.resultsPanel.nativeElement, this.canvasStyles);\n            // To blob and emit data\n            const EMIT_DATA = () => {\n                this.eventEmit(code);\n                this.dataForResize = code;\n            };\n            // HTMLImageElement\n            if (element instanceof HTMLImageElement) {\n                callback(true);\n                EMIT_DATA();\n                VIBRATE(this.vibrate);\n                PLAY_AUDIO(this.isBeep);\n            }\n            // HTMLVideoElement\n            if (element instanceof HTMLVideoElement) {\n                EMIT_DATA();\n                VIBRATE(this.vibrate);\n                PLAY_AUDIO(this.isBeep);\n            }\n        }\n        else {\n            callback(false);\n            REMOVE_RESULT_PANEL(this.resultsPanel.nativeElement);\n            this.dataForResize = [];\n        }\n    }\n    /**\n     * eventEmit\n     * @param response\n     */\n    eventEmit(response = false) {\n        (response !== false) && this.data.next(response || []);\n        (response !== false) && this.event.emit(response || []);\n    }\n    /**\n     * Single-thread\n     * Loop Recording on Camera\n     * Must be destroy request\n     * Not using: requestAnimationFrame\n     * @param delay\n     */\n    requestAnimationFrame(delay = 100) {\n        try {\n            clearTimeout(this.rAF_ID);\n            this.rAF_ID = setTimeout(() => {\n                if (this.video.nativeElement.readyState === this.video.nativeElement.HAVE_ENOUGH_DATA) {\n                    delay = 0; // Appy first request\n                    WASM_READY() && this.drawImage(this.video.nativeElement);\n                    this.isStart && !this.isPause && this.requestAnimationFrame(delay);\n                }\n            }, /*avoid cache mediaStream*/ delay || this.fps);\n        }\n        catch (error) {\n            clearTimeout(this.rAF_ID);\n        }\n    }\n    /**\n     * isReady\n     */\n    get isReady() {\n        return this.ready;\n    }\n    ngOnDestroy() {\n        this.pause();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NgxScannerQrcodeComponent, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.3\", type: NgxScannerQrcodeComponent, selector: \"ngx-scanner-qrcode\", inputs: { src: \"src\", fps: \"fps\", vibrate: \"vibrate\", decode: \"decode\", isBeep: \"isBeep\", config: \"config\", constraints: \"constraints\", canvasStyles: \"canvasStyles\" }, outputs: { event: \"event\" }, host: { classAttribute: \"ngx-scanner-qrcode\" }, viewQueries: [{ propertyName: \"video\", first: true, predicate: [\"video\"], descendants: true }, { propertyName: \"canvas\", first: true, predicate: [\"canvas\"], descendants: true }, { propertyName: \"resultsPanel\", first: true, predicate: [\"resultsPanel\"], descendants: true }], exportAs: [\"scanner\"], ngImport: i0, template: `<div #resultsPanel class=\"origin-overlay\"></div><canvas #canvas class=\"origin-canvas\"></canvas><video #video playsinline class=\"origin-video\"></video>`, isInline: true, styles: [\".ngx-scanner-qrcode{display:block;position:relative}.origin-overlay{width:100%;position:absolute}.origin-overlay span{z-index:2;text-align:left;position:absolute}.origin-overlay .qrcode-polygon{z-index:1;position:absolute}.origin-canvas{width:100%;position:absolute}.origin-video{width:100%;background-color:#262626}.qrcode-tooltip{z-index:3;position:absolute}.qrcode-tooltip:hover .qrcode-tooltip-temp{display:block;position:absolute;cursor:copy}.qrcode-tooltip:hover .qrcode-tooltip-temp:active{color:#afafaf}.qrcode-tooltip .qrcode-tooltip-temp{bottom:0;left:50%;color:#fff;text-align:left;display:none;width:max-content;word-wrap:break-word;transform:translate(-50%);transform-style:preserve-3d;background-color:#000000d0;box-shadow:1px 1px 20px #000000e0}.qrcode-tooltip .qrcode-tooltip-temp svg{cursor:pointer}.qrcode-tooltip .qrcode-tooltip-temp svg rect{fill:none;stroke:#fff;stroke-linejoin:round;stroke-width:32px}.qrcode-tooltip .qrcode-tooltip-temp svg path{fill:none;stroke:#fff;stroke-linecap:round;stroke-linejoin:round;stroke-width:32px}.qrcode-tooltip .qrcode-tooltip-temp svg:active rect{stroke:#afafaf}.qrcode-tooltip .qrcode-tooltip-temp svg:active path{stroke:#afafaf}\\n\"], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NgxScannerQrcodeComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-scanner-qrcode', template: `<div #resultsPanel class=\"origin-overlay\"></div><canvas #canvas class=\"origin-canvas\"></canvas><video #video playsinline class=\"origin-video\"></video>`, host: { 'class': 'ngx-scanner-qrcode' }, exportAs: 'scanner', inputs: ['src', 'fps', 'vibrate', 'decode', 'isBeep', 'config', 'constraints', 'canvasStyles'], outputs: ['event'], queries: {\n                        video: new ViewChild('video'),\n                        canvas: new ViewChild('canvas'),\n                        resultsPanel: new ViewChild('resultsPanel')\n                    }, encapsulation: ViewEncapsulation.None, styles: [\".ngx-scanner-qrcode{display:block;position:relative}.origin-overlay{width:100%;position:absolute}.origin-overlay span{z-index:2;text-align:left;position:absolute}.origin-overlay .qrcode-polygon{z-index:1;position:absolute}.origin-canvas{width:100%;position:absolute}.origin-video{width:100%;background-color:#262626}.qrcode-tooltip{z-index:3;position:absolute}.qrcode-tooltip:hover .qrcode-tooltip-temp{display:block;position:absolute;cursor:copy}.qrcode-tooltip:hover .qrcode-tooltip-temp:active{color:#afafaf}.qrcode-tooltip .qrcode-tooltip-temp{bottom:0;left:50%;color:#fff;text-align:left;display:none;width:max-content;word-wrap:break-word;transform:translate(-50%);transform-style:preserve-3d;background-color:#000000d0;box-shadow:1px 1px 20px #000000e0}.qrcode-tooltip .qrcode-tooltip-temp svg{cursor:pointer}.qrcode-tooltip .qrcode-tooltip-temp svg rect{fill:none;stroke:#fff;stroke-linejoin:round;stroke-width:32px}.qrcode-tooltip .qrcode-tooltip-temp svg path{fill:none;stroke:#fff;stroke-linecap:round;stroke-linejoin:round;stroke-width:32px}.qrcode-tooltip .qrcode-tooltip-temp svg:active rect{stroke:#afafaf}.qrcode-tooltip .qrcode-tooltip-temp svg:active path{stroke:#afafaf}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; } });\n\nvar ScannerQRCodeSymbolType;\n(function (ScannerQRCodeSymbolType) {\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_NONE\"] = 0] = \"ScannerQRCode_NONE\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_PARTIAL\"] = 1] = \"ScannerQRCode_PARTIAL\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_EAN2\"] = 2] = \"ScannerQRCode_EAN2\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_EAN5\"] = 5] = \"ScannerQRCode_EAN5\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_EAN8\"] = 8] = \"ScannerQRCode_EAN8\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_UPCE\"] = 9] = \"ScannerQRCode_UPCE\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_ISBN10\"] = 10] = \"ScannerQRCode_ISBN10\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_UPCA\"] = 12] = \"ScannerQRCode_UPCA\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_EAN13\"] = 13] = \"ScannerQRCode_EAN13\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_ISBN13\"] = 14] = \"ScannerQRCode_ISBN13\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_COMPOSITE\"] = 15] = \"ScannerQRCode_COMPOSITE\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_I25\"] = 25] = \"ScannerQRCode_I25\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_DATABAR\"] = 34] = \"ScannerQRCode_DATABAR\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_DATABAR_EXP\"] = 35] = \"ScannerQRCode_DATABAR_EXP\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_CODABAR\"] = 38] = \"ScannerQRCode_CODABAR\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_CODE39\"] = 39] = \"ScannerQRCode_CODE39\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_PDF417\"] = 57] = \"ScannerQRCode_PDF417\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_QRCODE\"] = 64] = \"ScannerQRCode_QRCODE\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_SQCODE\"] = 80] = \"ScannerQRCode_SQCODE\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_CODE93\"] = 93] = \"ScannerQRCode_CODE93\";\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_CODE128\"] = 128] = \"ScannerQRCode_CODE128\";\n    /*\n     * Please see _ScannerQRCode_get_symbol_hash() if adding\n     * anything after 128\n     */\n    /** mask for base symbol type.\n     * @deprecated in 0.11, remove this from existing code\n     */\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_SYMBOL\"] = 255] = \"ScannerQRCode_SYMBOL\";\n    /** 2-digit add-on flag.\n     * @deprecated in 0.11, a ::ScannerQRCode_EAN2 component is used for\n     * 2-digit GS1 add-ons\n     */\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_ADDON2\"] = 512] = \"ScannerQRCode_ADDON2\";\n    /** 5-digit add-on flag.\n     * @deprecated in 0.11, a ::ScannerQRCode_EAN5 component is used for\n     * 5-digit GS1 add-ons\n     */\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_ADDON5\"] = 1280] = \"ScannerQRCode_ADDON5\";\n    /** add-on flag mask.\n     * @deprecated in 0.11, GS1 add-ons are represented using composite\n     * symbols of type ::ScannerQRCode_COMPOSITE; add-on components use ::ScannerQRCode_EAN2\n     * or ::ScannerQRCode_EAN5\n     */\n    ScannerQRCodeSymbolType[ScannerQRCodeSymbolType[\"ScannerQRCode_ADDON\"] = 1792] = \"ScannerQRCode_ADDON\";\n})(ScannerQRCodeSymbolType || (ScannerQRCodeSymbolType = {}));\nvar ScannerQRCodeConfigType;\n(function (ScannerQRCodeConfigType) {\n    ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_ENABLE\"] = 0] = \"ScannerQRCode_CFG_ENABLE\";\n    ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_ADD_CHECK\"] = 1] = \"ScannerQRCode_CFG_ADD_CHECK\";\n    ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_EMIT_CHECK\"] = 2] = \"ScannerQRCode_CFG_EMIT_CHECK\";\n    ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_ASCII\"] = 3] = \"ScannerQRCode_CFG_ASCII\";\n    ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_BINARY\"] = 4] = \"ScannerQRCode_CFG_BINARY\";\n    ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_NUM\"] = 5] = \"ScannerQRCode_CFG_NUM\";\n    ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_MIN_LEN\"] = 32] = \"ScannerQRCode_CFG_MIN_LEN\";\n    ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_MAX_LEN\"] = 33] = \"ScannerQRCode_CFG_MAX_LEN\";\n    ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_UNCERTAINTY\"] = 64] = \"ScannerQRCode_CFG_UNCERTAINTY\";\n    ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_POSITION\"] = 128] = \"ScannerQRCode_CFG_POSITION\";\n    ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_TEST_INVERTED\"] = 129] = \"ScannerQRCode_CFG_TEST_INVERTED\";\n    ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_X_DENSITY\"] = 256] = \"ScannerQRCode_CFG_X_DENSITY\";\n    ScannerQRCodeConfigType[ScannerQRCodeConfigType[\"ScannerQRCode_CFG_Y_DENSITY\"] = 257] = \"ScannerQRCode_CFG_Y_DENSITY\";\n})(ScannerQRCodeConfigType || (ScannerQRCodeConfigType = {}));\nvar ScannerQRCodeOrientation;\n(function (ScannerQRCodeOrientation) {\n    ScannerQRCodeOrientation[ScannerQRCodeOrientation[\"ScannerQRCode_ORIENT_UNKNOWN\"] = -1] = \"ScannerQRCode_ORIENT_UNKNOWN\";\n    ScannerQRCodeOrientation[ScannerQRCodeOrientation[\"ScannerQRCode_ORIENT_UP\"] = 0] = \"ScannerQRCode_ORIENT_UP\";\n    ScannerQRCodeOrientation[ScannerQRCodeOrientation[\"ScannerQRCode_ORIENT_RIGHT\"] = 1] = \"ScannerQRCode_ORIENT_RIGHT\";\n    ScannerQRCodeOrientation[ScannerQRCodeOrientation[\"ScannerQRCode_ORIENT_DOWN\"] = 2] = \"ScannerQRCode_ORIENT_DOWN\";\n    ScannerQRCodeOrientation[ScannerQRCodeOrientation[\"ScannerQRCode_ORIENT_LEFT\"] = 3] = \"ScannerQRCode_ORIENT_LEFT\";\n})(ScannerQRCodeOrientation || (ScannerQRCodeOrientation = {}));\nclass ScannerQRCodeTypePointer {\n    constructor(ptr, buf) {\n        this.ptr = ptr;\n        this.ptr32 = ptr >> 2;\n        this.buf = buf;\n        this.HEAP8 = new Int8Array(buf);\n        this.HEAPU32 = new Uint32Array(buf);\n        this.HEAP32 = new Int32Array(buf);\n    }\n}\nclass ScannerQRCodeSymbolPtr extends ScannerQRCodeTypePointer {\n    get type() {\n        return this.HEAPU32[this.ptr32];\n    }\n    get data() {\n        const len = this.HEAPU32[this.ptr32 + 4];\n        const ptr = this.HEAPU32[this.ptr32 + 5];\n        return Int8Array.from(this.HEAP8.subarray(ptr, ptr + len));\n    }\n    get points() {\n        const len = this.HEAPU32[this.ptr32 + 7];\n        const ptr = this.HEAPU32[this.ptr32 + 8];\n        const ptr32 = ptr >> 2;\n        const res = [];\n        for (let i = 0; i < len; ++i) {\n            const x = this.HEAP32[ptr32 + i * 2];\n            const y = this.HEAP32[ptr32 + i * 2 + 1];\n            res.push({ x, y });\n        }\n        return res;\n    }\n    get orientation() {\n        return this.HEAP32[this.ptr32 + 9];\n    }\n    get next() {\n        const ptr = this.HEAPU32[this.ptr32 + 11];\n        if (!ptr)\n            return null;\n        return new ScannerQRCodeSymbolPtr(ptr, this.buf);\n    }\n    get time() {\n        return this.HEAPU32[this.ptr32 + 13];\n    }\n    get cacheCount() {\n        return this.HEAP32[this.ptr32 + 14];\n    }\n    get quality() {\n        return this.HEAP32[this.ptr32 + 15];\n    }\n}\nclass SymbolSetPtr extends ScannerQRCodeTypePointer {\n    get head() {\n        const ptr = this.HEAPU32[this.ptr32 + 2];\n        if (!ptr)\n            return null;\n        return new ScannerQRCodeSymbolPtr(ptr, this.buf);\n    }\n}\nclass ScannerQRCodeResult {\n    constructor(ptr) {\n        this.value = '';\n        this.type = ptr.type;\n        this.typeName = ScannerQRCodeSymbolType[this.type];\n        this.data = ptr.data;\n        this.points = ptr.points;\n        this.orientation = ptr.orientation;\n        this.time = ptr.time;\n        this.cacheCount = ptr.cacheCount;\n        this.quality = ptr.quality;\n    }\n    static createSymbolsFromPtr(ptr, buf) {\n        if (ptr == 0)\n            return [];\n        const set = new SymbolSetPtr(ptr, buf);\n        let symbol = set.head;\n        const res = [];\n        while (symbol !== null) {\n            res.push(new ScannerQRCodeResult(symbol));\n            symbol = symbol.next;\n        }\n        return res;\n    }\n    decode(encoding) {\n        const decoder = new TextDecoder(encoding);\n        return decoder.decode(this.data);\n    }\n}\n\nclass NgxScannerQrcodeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NgxScannerQrcodeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.3\", ngImport: i0, type: NgxScannerQrcodeModule, declarations: [NgxScannerQrcodeComponent], exports: [NgxScannerQrcodeComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NgxScannerQrcodeModule, providers: [NgxScannerQrcodeService] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.3\", ngImport: i0, type: NgxScannerQrcodeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [NgxScannerQrcodeComponent],\n                    exports: [NgxScannerQrcodeComponent],\n                    providers: [NgxScannerQrcodeService],\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-scanner-qrcode\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LOAD_WASM, NgxScannerQrcodeComponent, NgxScannerQrcodeModule, NgxScannerQrcodeService, ScannerQRCodeConfigType, ScannerQRCodeOrientation, ScannerQRCodeResult, ScannerQRCodeSymbolType };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}