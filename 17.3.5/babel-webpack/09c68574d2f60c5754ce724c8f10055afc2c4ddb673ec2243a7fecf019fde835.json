{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"angularx-qrcode\";\nexport class QrcodesComponent {\n  constructor() {\n    this.initial_state = {\n      allowEmptyString: true,\n      alt: \"A custom alt attribute\",\n      ariaLabel: `QR Code image with the following content...`,\n      colorDark: \"#000000ff\",\n      colorLight: \"#ffffffff\",\n      cssClass: \"center\",\n      elementType: \"canvas\",\n      errorCorrectionLevel: \"M\",\n      imageSrc: \"./assets/angular-logo.png\",\n      imageHeight: 75,\n      imageWidth: 75,\n      margin: 4,\n      qrdata: \"https://github.com/Cordobo/angularx-qrcode\",\n      scale: 1,\n      version: undefined,\n      title: \"A custom title attribute\",\n      width: 300\n    };\n    this.data_model = {\n      ...this.initial_state\n    };\n    this.selectedIndex = 0;\n    this.showA11y = true;\n    this.showColors = true;\n    this.showCss = true;\n    this.showImage = true;\n    this.allowEmptyString = this.data_model.allowEmptyString;\n    this.alt = this.data_model.alt;\n    this.ariaLabel = this.data_model.ariaLabel;\n    this.colorDark = this.data_model.colorDark;\n    this.colorLight = this.data_model.colorLight;\n    this.cssClass = this.data_model.cssClass;\n    this.elementType = this.data_model.elementType;\n    this.errorCorrectionLevel = this.data_model.errorCorrectionLevel;\n    this.imageSrc = this.showImage ? this.data_model.imageSrc : undefined;\n    this.imageHeight = this.showImage ? this.data_model.imageHeight : undefined;\n    this.imageWidth = this.showImage ? this.data_model.imageWidth : undefined;\n    this.margin = this.data_model.margin;\n    this.qrdata = this.data_model.qrdata;\n    this.scale = this.data_model.scale;\n    this.title = this.data_model.title;\n    this.width = this.data_model.width;\n  }\n  // Change value programatically\n  changeMargin(newValue) {\n    this.margin = newValue;\n  }\n  reset() {\n    this.allowEmptyString = this.data_model.allowEmptyString;\n    this.alt = this.data_model.alt;\n    this.ariaLabel = this.data_model.ariaLabel;\n    this.colorDark = this.data_model.colorDark;\n    this.colorLight = this.data_model.colorLight;\n    this.cssClass = this.data_model.cssClass;\n    this.elementType = this.data_model.elementType;\n    this.errorCorrectionLevel = this.data_model.errorCorrectionLevel;\n    this.imageSrc = this.data_model.imageSrc;\n    this.imageHeight = this.data_model.imageHeight;\n    this.imageWidth = this.data_model.imageWidth;\n    this.margin = this.data_model.margin;\n    this.qrdata = this.data_model.qrdata;\n    this.scale = this.data_model.scale;\n    this.title = this.data_model.title;\n    this.width = this.data_model.width;\n    this.setA11yVisibility(true);\n    this.setColorsVisibility(true);\n    this.setCssVisibility(true);\n    this.setImageVisibility(true);\n  }\n  setTabIndex(idx) {\n    this.selectedIndex = idx;\n    return false;\n  }\n  setA11yVisibility(enable) {\n    this.showA11y = enable ? enable : !this.showA11y;\n  }\n  setColorsVisibility(enable) {\n    this.showColors = enable ? enable : !this.showColors;\n  }\n  setCssVisibility(enable) {\n    this.showCss = enable ? enable : !this.showCss;\n  }\n  setImageVisibility(enable) {\n    this.showImage = enable !== undefined ? enable : !this.showImage;\n    this.imageSrc = this.showImage ? this.data_model.imageSrc : undefined;\n    if (this.showImage) {\n      this.elementType = this.data_model.elementType;\n      this.imageHeight = this.data_model.imageHeight;\n      this.imageWidth = this.data_model.imageWidth;\n    }\n  }\n  // Re-enable, when a method to download images has been implemented\n  onChangeURL(url) {\n    this.qrCodeSrc = url;\n  }\n  saveAsImage(parent) {\n    let parentElement = null;\n    if (this.elementType === \"canvas\") {\n      // fetches base 64 data from canvas\n      parentElement = parent.qrcElement.nativeElement.querySelector(\"canvas\").toDataURL(\"image/png\");\n    } else if (this.elementType === \"img\" || this.elementType === \"url\") {\n      // fetches base 64 data from image\n      // parentElement contains the base64 encoded image src\n      // you might use to store somewhere\n      parentElement = parent.qrcElement.nativeElement.querySelector(\"img\").src;\n    } else {\n      alert(\"Set elementType to 'canvas', 'img' or 'url'.\");\n    }\n    if (parentElement) {\n      // converts base 64 encoded image to blobData\n      let blobData = this.convertBase64ToBlob(parentElement);\n      // saves as image\n      const blob = new Blob([blobData], {\n        type: \"image/png\"\n      });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      // name of the file\n      link.download = \"angularx-qrcode\";\n      link.click();\n    }\n  }\n  convertBase64ToBlob(Base64Image) {\n    // split into two parts\n    const parts = Base64Image.split(\";base64,\");\n    // hold the content type\n    const imageType = parts[0].split(\":\")[1];\n    // decode base64 string\n    const decodedData = window.atob(parts[1]);\n    // create unit8array of size same as row data length\n    const uInt8Array = new Uint8Array(decodedData.length);\n    // insert all character code into uint8array\n    for (let i = 0; i < decodedData.length; ++i) {\n      uInt8Array[i] = decodedData.charCodeAt(i);\n    }\n    // return blob image after conversion\n    return new Blob([uInt8Array], {\n      type: imageType\n    });\n  }\n  strBuilder() {\n    // featureList\n    const f = [];\n    if (this.qrdata) {\n      f.push(`[qrdata]=\"'${this.qrdata}'\"`);\n    }\n    if (this.allowEmptyString) {\n      f.push(`[allowEmptyString]=\"${this.allowEmptyString}\"`);\n    }\n    if (this.showA11y && this.alt && (this.elementType === \"img\" || this.elementType === \"url\")) {\n      f.push(`[alt]=\"'${this.alt}'\"`);\n    }\n    if (this.showA11y && this.ariaLabel && (this.elementType === \"canvas\" || this.elementType === \"img\" || this.elementType === \"url\")) {\n      f.push(`[ariaLabel]=\"'${this.ariaLabel}'\"`);\n    }\n    if (this.showCss && this.cssClass) {\n      f.push(`[cssClass]=\"'${this.cssClass}'\"`);\n    }\n    if (this.showColors && this.colorDark) {\n      f.push(`[colorDark]=\"'${this.colorDark}'\"`);\n    }\n    if (this.showColors && this.colorLight) {\n      f.push(`[colorLight]=\"'${this.colorLight}'\"`);\n    }\n    f.push(`[elementType]=\"'${this.elementType}'\"`);\n    f.push(`[errorCorrectionLevel]=\"'${this.errorCorrectionLevel}'\"`);\n    if (this.showImage && this.imageSrc) {\n      f.push(`[imageSrc]=\"'${this.imageSrc}'\"`);\n    }\n    if (this.showImage && this.imageHeight) {\n      f.push(`[imageHeight]=\"${this.imageHeight}\"`);\n    }\n    if (this.showImage && this.imageWidth) {\n      f.push(`[imageWidth]=\"${this.imageWidth}\"`);\n    }\n    if (this.margin) {\n      f.push(`[margin]=\"${this.margin}\"`);\n    }\n    if (this.scale) {\n      f.push(`[scale]=\"${this.scale}\"`);\n    }\n    if (this.showA11y && this.title) {\n      f.push(`[title]=\"'${this.title}'\"`);\n    }\n    f.push(`[width]=\"${this.width}\"`);\n    return f.join(\"\\n    \");\n  }\n  get renderSampleHtmlCode() {\n    return `<div class=\"qrcodeImage\">\n  <qrcode\n    ${this.strBuilder()}\n  ></qrcode>\n</div>`;\n  }\n  cssCodeBuilder() {\n    switch (this.cssClass) {\n      case \"center\":\n        return `.center {\n  display: flex;\n  flex: 1;\n  justify-content: center;\n}`;\n      case \"right\":\n        return `.right {\n  display: flex;\n  flex: 1;\n  justify-content: right;\n}`;\n      case \"demoBorder\":\n        return `.demoBorder {\n  border: 10px solid red;\n}`;\n      case \"demoBorderRadius\":\n        return `.demoBorderRadius {\n  border: dashed;\n  border-width: 2px 4px;\n  border-radius: 40px;\n  overflow: hidden;\n}`;\n      case \"left\":\n      default:\n        return `.left {\n  display: flex;\n  flex: 1;\n  justify-content: left;\n}`;\n    }\n  }\n  get renderSampleCssCode() {\n    return `/* Put this code in your CSS file */\n\n/* The div container */\n.qrcodeImage {\n  display: flex;\n  flex: 1;\n}\n\n/* Add custom styles here */\n${this.cssCodeBuilder()}\n`;\n  }\n  static #_ = this.ɵfac = function QrcodesComponent_Factory(t) {\n    return new (t || QrcodesComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QrcodesComponent,\n    selectors: [[\"app-qrcodes\"]],\n    decls: 2,\n    vars: 3,\n    consts: [[1, \"qrcodeImage\"], [3, \"qrdata\", \"size\", \"level\"]],\n    template: function QrcodesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"qrcode\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"qrdata\", ctx.angularxQrCode)(\"size\", 256)(\"level\", \"M\");\n      }\n    },\n    dependencies: [i1.QRCodeComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["QrcodesComponent","constructor","initial_state","allowEmptyString","alt","ariaLabel","colorDark","colorLight","cssClass","elementType","errorCorrectionLevel","imageSrc","imageHeight","imageWidth","margin","qrdata","scale","version","undefined","title","width","data_model","selectedIndex","showA11y","showColors","showCss","showImage","changeMargin","newValue","reset","setA11yVisibility","setColorsVisibility","setCssVisibility","setImageVisibility","setTabIndex","idx","enable","onChangeURL","url","qrCodeSrc","saveAsImage","parent","parentElement","qrcElement","nativeElement","querySelector","toDataURL","src","alert","blobData","convertBase64ToBlob","blob","Blob","type","window","URL","createObjectURL","link","document","createElement","href","download","click","Base64Image","parts","split","imageType","decodedData","atob","uInt8Array","Uint8Array","length","i","charCodeAt","strBuilder","f","push","join","renderSampleHtmlCode","cssCodeBuilder","renderSampleCssCode","_","_2","selectors","decls","vars","consts","template","QrcodesComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","angularxQrCode"],"sources":["C:\\Users\\ryana\\OneDrive\\Desktop\\Personal Files\\Freelance\\attendance-monitoring-using-qr-code\\src\\app\\pages\\qrcodes\\qrcodes.component.ts","C:\\Users\\ryana\\OneDrive\\Desktop\\Personal Files\\Freelance\\attendance-monitoring-using-qr-code\\src\\app\\pages\\qrcodes\\qrcodes.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SafeUrl } from '@angular/platform-browser';\nimport { FixMeLater, QRCodeErrorCorrectionLevel, QRCodeElementType } from \"angularx-qrcode\";\n\n\n@Component({\n  selector: 'app-qrcodes',\n  templateUrl: './qrcodes.component.html',\n  styleUrls: ['./qrcodes.component.css']\n})\nexport class QrcodesComponent {\n  public initial_state = {\n    allowEmptyString: true,\n    alt: \"A custom alt attribute\",\n    ariaLabel: `QR Code image with the following content...`,\n    colorDark: \"#000000ff\",\n    colorLight: \"#ffffffff\",\n    cssClass: \"center\",\n    elementType: \"canvas\" as QRCodeElementType,\n    errorCorrectionLevel: \"M\" as QRCodeErrorCorrectionLevel,\n    imageSrc: \"./assets/angular-logo.png\",\n    imageHeight: 75,\n    imageWidth: 75,\n    margin: 4,\n    qrdata: \"https://github.com/Cordobo/angularx-qrcode\",\n    scale: 1,\n    version: undefined,\n    title: \"A custom title attribute\",\n    width: 300,\n  }\n  public data_model = {\n    ...this.initial_state,\n  }\n\n  public allowEmptyString: boolean\n  public alt: string\n  public ariaLabel: string\n  public colorDark: string\n  public colorLight: string\n  public cssClass: string\n  public elementType: QRCodeElementType\n  public errorCorrectionLevel: QRCodeErrorCorrectionLevel\n  public imageSrc?: string\n  public imageHeight?: number\n  public imageWidth?: number\n  public margin: number\n  public qrdata: string\n  public scale: number\n  public title: string\n  public width: number\n\n  public qrCodeSrc!: SafeUrl\n\n  public selectedIndex: number\n\n  public showA11y: boolean\n  public showColors: boolean\n  public showCss: boolean\n  public showImage: boolean\n\n  constructor() {\n    this.selectedIndex = 0\n\n    this.showA11y = true\n    this.showColors = true\n    this.showCss = true\n    this.showImage = true\n\n    this.allowEmptyString = this.data_model.allowEmptyString\n    this.alt = this.data_model.alt\n    this.ariaLabel = this.data_model.ariaLabel\n    this.colorDark = this.data_model.colorDark\n    this.colorLight = this.data_model.colorLight\n    this.cssClass = this.data_model.cssClass\n    this.elementType = this.data_model.elementType\n    this.errorCorrectionLevel = this.data_model.errorCorrectionLevel\n    this.imageSrc = this.showImage ? this.data_model.imageSrc : undefined\n    this.imageHeight = this.showImage ? this.data_model.imageHeight : undefined\n    this.imageWidth = this.showImage ? this.data_model.imageWidth : undefined\n    this.margin = this.data_model.margin\n    this.qrdata = this.data_model.qrdata\n    this.scale = this.data_model.scale\n    this.title = this.data_model.title\n    this.width = this.data_model.width\n  }\n\n  // Change value programatically\n  changeMargin(newValue: number): void {\n    this.margin = newValue\n  }\n\n  reset(): void {\n    this.allowEmptyString = this.data_model.allowEmptyString\n    this.alt = this.data_model.alt\n    this.ariaLabel = this.data_model.ariaLabel\n    this.colorDark = this.data_model.colorDark\n    this.colorLight = this.data_model.colorLight\n    this.cssClass = this.data_model.cssClass\n    this.elementType = this.data_model.elementType\n    this.errorCorrectionLevel = this.data_model.errorCorrectionLevel\n    this.imageSrc = this.data_model.imageSrc\n    this.imageHeight = this.data_model.imageHeight\n    this.imageWidth = this.data_model.imageWidth\n    this.margin = this.data_model.margin\n    this.qrdata = this.data_model.qrdata\n    this.scale = this.data_model.scale\n    this.title = this.data_model.title\n    this.width = this.data_model.width\n\n    this.setA11yVisibility(true)\n    this.setColorsVisibility(true)\n    this.setCssVisibility(true)\n    this.setImageVisibility(true)\n\n  }\n\n  setTabIndex(idx: number): boolean {\n    this.selectedIndex = idx\n    return false\n  }\n\n  setA11yVisibility(enable?: boolean): void {\n    this.showA11y = enable ? enable : !this.showA11y\n  }\n\n  setColorsVisibility(enable?: boolean): void {\n    this.showColors = enable ? enable : !this.showColors\n  }\n\n  setCssVisibility(enable?: boolean): void {\n    this.showCss = enable ? enable : !this.showCss\n  }\n\n  setImageVisibility(enable?: boolean): void {\n    this.showImage = enable !== undefined ? enable : !this.showImage\n    this.imageSrc = this.showImage ? this.data_model.imageSrc : undefined\n\n    if (this.showImage) {\n      this.elementType = this.data_model.elementType\n      this.imageHeight = this.data_model.imageHeight\n      this.imageWidth = this.data_model.imageWidth\n    }\n  }\n\n  // Re-enable, when a method to download images has been implemented\n  onChangeURL(url: SafeUrl) {\n    this.qrCodeSrc = url\n  }\n\n  saveAsImage(parent: FixMeLater) {\n    let parentElement = null\n\n    if (this.elementType === \"canvas\") {\n      // fetches base 64 data from canvas\n      parentElement = parent.qrcElement.nativeElement\n        .querySelector(\"canvas\")\n        .toDataURL(\"image/png\")\n    } else if (this.elementType === \"img\" || this.elementType === \"url\") {\n      // fetches base 64 data from image\n      // parentElement contains the base64 encoded image src\n      // you might use to store somewhere\n      parentElement = parent.qrcElement.nativeElement.querySelector(\"img\").src\n    } else {\n      alert(\"Set elementType to 'canvas', 'img' or 'url'.\")\n    }\n\n    if (parentElement) {\n      // converts base 64 encoded image to blobData\n      let blobData = this.convertBase64ToBlob(parentElement)\n      // saves as image\n      const blob = new Blob([blobData], { type: \"image/png\" })\n      const url = window.URL.createObjectURL(blob)\n      const link = document.createElement(\"a\")\n      link.href = url\n      // name of the file\n      link.download = \"angularx-qrcode\"\n      link.click()\n    }\n  }\n\n  private convertBase64ToBlob(Base64Image: string) {\n    // split into two parts\n    const parts = Base64Image.split(\";base64,\")\n    // hold the content type\n    const imageType = parts[0].split(\":\")[1]\n    // decode base64 string\n    const decodedData = window.atob(parts[1])\n    // create unit8array of size same as row data length\n    const uInt8Array = new Uint8Array(decodedData.length)\n    // insert all character code into uint8array\n    for (let i = 0; i < decodedData.length; ++i) {\n      uInt8Array[i] = decodedData.charCodeAt(i)\n    }\n    // return blob image after conversion\n    return new Blob([uInt8Array], { type: imageType })\n  }\n\n  strBuilder(): string {\n    // featureList\n    const f: string[] = []\n\n    if (this.qrdata) {\n      f.push(`[qrdata]=\"'${this.qrdata}'\"`)\n    }\n    if (this.allowEmptyString) {\n      f.push(`[allowEmptyString]=\"${this.allowEmptyString}\"`)\n    }\n    if (\n      this.showA11y &&\n      this.alt &&\n      (this.elementType === \"img\" || this.elementType === \"url\")\n    ) {\n      f.push(`[alt]=\"'${this.alt}'\"`)\n    }\n    if (\n      this.showA11y &&\n      this.ariaLabel &&\n      (this.elementType === \"canvas\" ||\n        this.elementType === \"img\" ||\n        this.elementType === \"url\")\n    ) {\n      f.push(`[ariaLabel]=\"'${this.ariaLabel}'\"`)\n    }\n\n    if (this.showCss && this.cssClass) {\n      f.push(`[cssClass]=\"'${this.cssClass}'\"`)\n    }\n    if (this.showColors && this.colorDark) {\n      f.push(`[colorDark]=\"'${this.colorDark}'\"`)\n    }\n    if (this.showColors && this.colorLight) {\n      f.push(`[colorLight]=\"'${this.colorLight}'\"`)\n    }\n    f.push(`[elementType]=\"'${this.elementType}'\"`)\n    f.push(`[errorCorrectionLevel]=\"'${this.errorCorrectionLevel}'\"`)\n    if (this.showImage && this.imageSrc) {\n      f.push(`[imageSrc]=\"'${this.imageSrc}'\"`)\n    }\n    if (this.showImage && this.imageHeight) {\n      f.push(`[imageHeight]=\"${this.imageHeight}\"`)\n    }\n    if (this.showImage && this.imageWidth) {\n      f.push(`[imageWidth]=\"${this.imageWidth}\"`)\n    }\n    if (this.margin) {\n      f.push(`[margin]=\"${this.margin}\"`)\n    }\n    if (this.scale) {\n      f.push(`[scale]=\"${this.scale}\"`)\n    }\n    if (this.showA11y && this.title) {\n      f.push(`[title]=\"'${this.title}'\"`)\n    }\n    f.push(`[width]=\"${this.width}\"`)\n\n    return f.join(\"\\n    \")\n  }\n\n  get renderSampleHtmlCode() {\n    return `<div class=\"qrcodeImage\">\n  <qrcode\n    ${this.strBuilder()}\n  ></qrcode>\n</div>`\n  }\n\n  cssCodeBuilder(): string {\n    switch (this.cssClass) {\n      case \"center\":\n        return `.center {\n  display: flex;\n  flex: 1;\n  justify-content: center;\n}`\n      case \"right\":\n        return `.right {\n  display: flex;\n  flex: 1;\n  justify-content: right;\n}`\n      case \"demoBorder\":\n        return `.demoBorder {\n  border: 10px solid red;\n}`\n      case \"demoBorderRadius\":\n        return `.demoBorderRadius {\n  border: dashed;\n  border-width: 2px 4px;\n  border-radius: 40px;\n  overflow: hidden;\n}`\n      case \"left\":\n      default:\n        return `.left {\n  display: flex;\n  flex: 1;\n  justify-content: left;\n}`\n    }\n  }\n\n  get renderSampleCssCode() {\n    return `/* Put this code in your CSS file */\n\n/* The div container */\n.qrcodeImage {\n  display: flex;\n  flex: 1;\n}\n\n/* Add custom styles here */\n${this.cssCodeBuilder()}\n`\n  }\n}\n","<div class=\"qrcodeImage\">\n  <qrcode [qrdata]=\"angularxQrCode\" [size]=\"256\" [level]=\"'M'\"></qrcode>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}